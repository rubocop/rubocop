---
AllCops:
  RubyInterpreters:
    - ruby
    - macruby
    - rake
    - jruby
    - rbx
  Include:
    - "**/*.rb"
    - "**/*.arb"
    - "**/*.axlsx"
    - "**/*.builder"
    - "**/*.fcgi"
    - "**/*.gemfile"
    - "**/*.gemspec"
    - "**/*.god"
    - "**/*.jb"
    - "**/*.jbuilder"
    - "**/*.mspec"
    - "**/*.opal"
    - "**/*.pluginspec"
    - "**/*.podspec"
    - "**/*.rabl"
    - "**/*.rake"
    - "**/*.rbuild"
    - "**/*.rbw"
    - "**/*.rbx"
    - "**/*.ru"
    - "**/*.ruby"
    - "**/*.spec"
    - "**/*.thor"
    - "**/*.watchr"
    - "**/.irbrc"
    - "**/.pryrc"
    - "**/.simplecov"
    - "**/buildfile"
    - "**/Appraisals"
    - "**/Berksfile"
    - "**/Brewfile"
    - "**/Buildfile"
    - "**/Capfile"
    - "**/Cheffile"
    - "**/Dangerfile"
    - "**/Deliverfile"
    - "**/Fastfile"
    - "**/*Fastfile"
    - "**/Gemfile"
    - "**/Guardfile"
    - "**/Jarfile"
    - "**/Mavenfile"
    - "**/Podfile"
    - "**/Puppetfile"
    - "**/Rakefile"
    - "**/rakefile"
    - "**/Snapfile"
    - "**/Steepfile"
    - "**/Thorfile"
    - "**/Vagabondfile"
    - "**/Vagrantfile"
  Exclude:
    - node_modules/**/*
    - tmp/**/*
    - vendor/**/*
    - ".git/**/*"
  DefaultFormatter: progress
  DisplayCopNames: true
  DisplayStyleGuide: false
  StyleGuideBaseURL: https://rubystyle.guide
  DocumentationBaseURL: https://docs.rubocop.org/rubocop
  ExtraDetails: false
  StyleGuideCopsOnly: false
  EnabledByDefault: false
  DisabledByDefault: false
  NewCops: pending
  UseCache: true
  MaxFilesInCache: 20000
  CacheRootDirectory:
  AllowSymlinksInCacheRootDirectory: false
  TargetRubyVersion:
  SuggestExtensions:
    rubocop-rails:
      - rails
    rubocop-rspec:
      - rspec
      - rspec-rails
    rubocop-minitest:
      - minitest
    rubocop-sequel:
      - sequel
    rubocop-rake:
      - rake
    rubocop-graphql:
      - graphql
Bundler/DuplicatedGem:
  Description: A Gem's requirements should be listed only once in a Gemfile.
  Enabled: true
  VersionAdded: '0.46'
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/DuplicatedGem
Bundler/GemComment:
  Description: |-
    Each gem in the Gemfile should have a comment explaining
    its purpose in the project, or the reason for its version
    or source.
  Enabled: false
  VersionAdded: '0.59'
  VersionChanged: '0.85'
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
  IgnoredGems: []
  OnlyFor: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/GemComment
Bundler/GemFilename:
  Description: |-
    Verifies that a project contains Gemfile or gems.rb file and correct
    associated lock file based on the configuration.
  Enabled: true
  VersionAdded: '1.20'
  EnforcedStyle: Gemfile
  SupportedStyles:
    - Gemfile
    - gems.rb
  Include:
    - "**/Gemfile"
    - "**/gems.rb"
    - "**/Gemfile.lock"
    - "**/gems.locked"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/GemFilename
Bundler/GemVersion:
  Description: |-
    Enforce that Gem version specifications or a commit reference (branch,
    ref, or tag) are either required or forbidden.
  Enabled: false
  VersionAdded: '1.14'
  EnforcedStyle: required
  SupportedStyles:
    - required
    - forbidden
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
  AllowedGems: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/GemVersion
Bundler/InsecureProtocolSource:
  Description: |-
    Passing symbol arguments to `source` (e.g. `source :rubygems`) is
    deprecated because they default to using HTTP requests. Instead, specify
    `'https://rubygems.org'` if possible, or `'http://rubygems.org'` if not.
  Enabled: true
  VersionAdded: '0.50'
  AllowHttpProtocol: true
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/InsecureProtocolSource
Bundler/OrderedGems:
  Description: Gems should be alphabetically sorted within groups.
  Enabled: true
  VersionAdded: '0.46'
  VersionChanged: '0.47'
  TreatCommentsAsGroupSeparators: true
  ConsiderPunctuation: false
  Include:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Bundler/OrderedGems
Gemspec/DateAssignment:
  Description: |-
    Checks that `date =` is not used in gemspec file.
    It is set automatically when the gem is packaged.
  Enabled: pending
  VersionAdded: '1.10'
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/DateAssignment
Gemspec/DependencyVersion:
  Description: |-
    Enforce that gem dependency version specifications or a commit reference (branch,
    ref, or tag) are either required or forbidden.
  Enabled: false
  VersionAdded: '1.29'
  EnforcedStyle: required
  SupportedStyles:
    - required
    - forbidden
  Include:
    - "**/*.gemspec"
  AllowedGems: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/DependencyVersion
Gemspec/DeprecatedAttributeAssignment:
  Description: |-
    Checks that deprecated attribute attributes are not set in a gemspec file.
    Removing `test_files` allows the user to receive smaller packed gems.
  Enabled: pending
  VersionAdded: '1.30'
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/DeprecatedAttributeAssignment
Gemspec/DuplicatedAssignment:
  Description: |-
    An attribute assignment method calls should be listed only once
    in a gemspec.
  Enabled: true
  VersionAdded: '0.52'
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/DuplicatedAssignment
Gemspec/OrderedDependencies:
  Description: Dependencies in the gemspec should be alphabetically sorted.
  Enabled: true
  VersionAdded: '0.51'
  TreatCommentsAsGroupSeparators: true
  ConsiderPunctuation: false
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/OrderedDependencies
Gemspec/RequireMFA:
  Description: Requires a gemspec to have `rubygems_mfa_required` metadata set.
  Enabled: pending
  VersionAdded: '1.23'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/RequireMFA
  Include:
    - "**/*.gemspec"
Gemspec/RequiredRubyVersion:
  Description: |-
    Checks that `required_ruby_version` in a gemspec file is set to a valid
    value (non-blank) and matches `TargetRubyVersion` as set in RuboCop's
    configuration for the gem.
  Enabled: true
  VersionAdded: '0.52'
  VersionChanged: '1.22'
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/RequiredRubyVersion
Gemspec/RubyVersionGlobalsUsage:
  Description: |-
    Checks that `RUBY_VERSION` constant is not used in gemspec.
    Using `RUBY_VERSION` is dangerous because value of the
    constant is determined by `rake release`.
    It's possible to have dependency based on ruby version used
    to execute `rake release` and not user's ruby version.
  StyleGuide: "#no-ruby-version-in-the-gemspec"
  Enabled: true
  VersionAdded: '0.72'
  Include:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Gemspec/RubyVersionGlobalsUsage
Layout/AccessModifierIndentation:
  Description: |-
    Bare access modifiers (those not applying to specific methods) should be
    indented as deep as method definitions, or as deep as the class/module
    keyword, depending on configuration.
  StyleGuide: "#indent-public-private-protected"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: indent
  SupportedStyles:
    - outdent
    - indent
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/AccessModifierIndentation
Layout/ArgumentAlignment:
  Description: |-
    Here we check if the arguments on a multi-line method
    definition are aligned.
  StyleGuide: "#no-double-indent"
  Enabled: true
  VersionAdded: '0.68'
  VersionChanged: '0.77'
  EnforcedStyle: with_first_argument
  SupportedStyles:
    - with_first_argument
    - with_fixed_indentation
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ArgumentAlignment
Layout/ArrayAlignment:
  Description: |-
    Here we check if the elements of a multi-line array literal are
    aligned.
  StyleGuide: "#no-double-indent"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.77'
  EnforcedStyle: with_first_element
  SupportedStyles:
    - with_first_element
    - with_fixed_indentation
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ArrayAlignment
Layout/AssignmentIndentation:
  Description: |-
    Checks the indentation of the first line of the
    right-hand-side of a multi-line assignment.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.77'
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/AssignmentIndentation
Layout/BeginEndAlignment:
  Description: Checks whether the end keyword of `begin` is aligned properly.
  Enabled: true
  VersionAdded: '0.91'
  EnforcedStyleAlignWith: start_of_line
  SupportedStylesAlignWith:
    - start_of_line
    - begin
  Severity: warning
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/BeginEndAlignment
Layout/BlockAlignment:
  Description: |-
    Checks whether the end keywords are aligned properly for do
    end blocks.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: either
  SupportedStylesAlignWith:
    - either
    - start_of_block
    - start_of_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/BlockAlignment
Layout/BlockEndNewline:
  Description: |-
    Checks whether the end statement of a do..end block
    is on its own line.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/BlockEndNewline
Layout/CaseIndentation:
  Description: |-
    Checks how the `when` and ``in``s of a `case` expression
    are indented in relation to its `case` or `end` keyword.
  StyleGuide: "#indent-when-to-case"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '1.16'
  EnforcedStyle: case
  SupportedStyles:
    - case
    - end
  IndentOneStep: false
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/CaseIndentation
Layout/ClassStructure:
  Description: 'Checks if the code style follows the ExpectedOrder configuration:'
  StyleGuide: "#consistent-classes"
  Enabled: false
  VersionAdded: '0.52'
  Categories:
    module_inclusion:
      - include
      - prepend
      - extend
  ExpectedOrder:
    - module_inclusion
    - constants
    - public_class_methods
    - initializer
    - public_methods
    - protected_methods
    - private_methods
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ClassStructure
Layout/ClosingHeredocIndentation:
  Description: Checks the indentation of here document closings.
  Enabled: true
  VersionAdded: '0.57'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ClosingHeredocIndentation
Layout/ClosingParenthesisIndentation:
  Description: |-
    Checks the indentation of hanging closing parentheses in
    method calls, method definitions, and grouped expressions. A hanging
    closing parenthesis means `)` preceded by a line break.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ClosingParenthesisIndentation
Layout/CommentIndentation:
  Description: Checks the indentation of comments.
  Enabled: true
  AllowForAlignment: false
  VersionAdded: '0.49'
  VersionChanged: '1.24'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/CommentIndentation
Layout/ConditionPosition:
  Description: |-
    Checks for conditions that are not on the same line as
    if/while/until.
  StyleGuide: "#same-line-condition"
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ConditionPosition
Layout/DefEndAlignment:
  Description: |-
    Checks whether the end keywords of method definitions are
    aligned properly.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: start_of_line
  SupportedStylesAlignWith:
    - start_of_line
    - def
  Severity: warning
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/DefEndAlignment
Layout/DotPosition:
  Description: Checks the . position in multi-line method calls.
  StyleGuide: "#consistent-multi-line-chains"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: leading
  SupportedStyles:
    - leading
    - trailing
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/DotPosition
Layout/ElseAlignment:
  Description: |-
    Checks the alignment of else keywords. Normally they should
    be aligned with an if/unless/while/until/begin/def/rescue keyword, but there
    are special cases when they should follow the same rules as the
    alignment of end.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ElseAlignment
Layout/EmptyComment:
  Description: Checks empty comment.
  Enabled: true
  VersionAdded: '0.53'
  AllowBorderComment: true
  AllowMarginComment: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyComment
Layout/EmptyLineAfterGuardClause:
  Description: Enforces empty line after guard clause
  Enabled: true
  VersionAdded: '0.56'
  VersionChanged: '0.59'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLineAfterGuardClause
Layout/EmptyLineAfterMagicComment:
  Description: Checks for a newline after the final magic comment.
  StyleGuide: "#separate-magic-comments-from-code"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLineAfterMagicComment
Layout/EmptyLineAfterMultilineCondition:
  Description: Enforces empty line after multiline condition.
  Enabled: false
  VersionAdded: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLineAfterMultilineCondition
Layout/EmptyLineBetweenDefs:
  Description: |-
    Checks whether class/module/method definitions are
    separated by one or more empty lines.
  StyleGuide: "#empty-lines-between-methods"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '1.23'
  EmptyLineBetweenMethodDefs: true
  EmptyLineBetweenClassDefs: true
  EmptyLineBetweenModuleDefs: true
  AllowAdjacentOneLineDefs: true
  NumberOfEmptyLines: 1
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLineBetweenDefs
Layout/EmptyLines:
  Description: Checks for two or more consecutive blank lines.
  StyleGuide: "#two-or-more-empty-lines"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLines
Layout/EmptyLinesAroundAccessModifier:
  Description: Access modifiers should be surrounded by blank lines.
  StyleGuide: "#empty-lines-around-access-modifier"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: around
  SupportedStyles:
    - around
    - only_before
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundAccessModifier
Layout/EmptyLinesAroundArguments:
  Description: |-
    Checks if empty lines exist around the arguments
    of a method invocation.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundArguments
Layout/EmptyLinesAroundAttributeAccessor:
  Description: |-
    Checks for a newline after an attribute accessor or a group of them.
    `alias` syntax and `alias_method`, `public`, `protected`, and `private` methods are allowed
    by default. These are customizable with `AllowAliasSyntax` and `AllowedMethods` options.
  StyleGuide: "#empty-lines-around-attribute-accessor"
  Enabled: true
  VersionAdded: '0.83'
  VersionChanged: '0.84'
  AllowAliasSyntax: true
  AllowedMethods:
    - alias_method
    - public
    - protected
    - private
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundAttributeAccessor
Layout/EmptyLinesAroundBeginBody:
  Description: |-
    Checks if empty lines exist around the bodies of begin-end
    blocks.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundBeginBody
Layout/EmptyLinesAroundBlockBody:
  Description: |-
    Checks if empty lines around the bodies of blocks match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundBlockBody
Layout/EmptyLinesAroundClassBody:
  Description: |-
    Checks if empty lines around the bodies of classes match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.53'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - empty_lines_except_namespace
    - empty_lines_special
    - no_empty_lines
    - beginning_only
    - ending_only
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundClassBody
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Description: |-
    Checks if empty lines exist around the bodies of `begin`
    sections. This cop doesn't check empty lines at `begin` body
    beginning/end and around method definition body.
    `Style/EmptyLinesAroundBeginBody` or `Style/EmptyLinesAroundMethodBody`
    can be used for this purpose.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundExceptionHandlingKeywords
Layout/EmptyLinesAroundMethodBody:
  Description: Checks if empty lines exist around the bodies of methods.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundMethodBody
Layout/EmptyLinesAroundModuleBody:
  Description: |-
    Checks if empty lines around the bodies of modules match
    the configuration.
  StyleGuide: "#empty-lines-around-bodies"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - empty_lines_except_namespace
    - empty_lines_special
    - no_empty_lines
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EmptyLinesAroundModuleBody
Layout/EndAlignment:
  Description: Checks whether the end keywords are aligned properly.
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleAlignWith: keyword
  SupportedStylesAlignWith:
    - keyword
    - variable
    - start_of_line
  Severity: warning
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EndAlignment
Layout/EndOfLine:
  Description: Checks for Windows-style line endings in the source code.
  StyleGuide: "#crlf"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: native
  SupportedStyles:
    - native
    - lf
    - crlf
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/EndOfLine
Layout/ExtraSpacing:
  Description: Checks for extra/unnecessary whitespace.
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true
  AllowBeforeTrailingComments: false
  ForceEqualSignAlignment: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ExtraSpacing
Layout/FirstArgumentIndentation:
  Description: |-
    Checks the indentation of the first argument in a method call.
    Arguments after the first one are checked by `Layout/ArgumentAlignment`,
    not by this cop.
  Enabled: true
  VersionAdded: '0.68'
  VersionChanged: '0.77'
  EnforcedStyle: special_for_inner_method_call_in_parentheses
  SupportedStyles:
    - consistent
    - consistent_relative_to_receiver
    - special_for_inner_method_call
    - special_for_inner_method_call_in_parentheses
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstArgumentIndentation
Layout/FirstArrayElementIndentation:
  Description: |-
    Checks the indentation of the first element in an array literal
    where the opening bracket and the first element are on separate lines.
    The other elements' indentations are handled by the ArrayAlignment cop.
  Enabled: true
  VersionAdded: '0.68'
  VersionChanged: '0.77'
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
    - special_inside_parentheses
    - consistent
    - align_brackets
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstArrayElementIndentation
Layout/FirstArrayElementLineBreak:
  Description: |-
    Checks for a line break before the first element in a
    multi-line array.
  Enabled: false
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstArrayElementLineBreak
Layout/FirstHashElementIndentation:
  Description: |-
    Checks the indentation of the first key in a hash literal
    where the opening brace and the first key are on separate lines. The
    other keys' indentations are handled by the HashAlignment cop.
  Enabled: true
  VersionAdded: '0.68'
  VersionChanged: '0.77'
  EnforcedStyle: special_inside_parentheses
  SupportedStyles:
    - special_inside_parentheses
    - consistent
    - align_braces
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstHashElementIndentation
Layout/FirstHashElementLineBreak:
  Description: |-
    Checks for a line break before the first element in a
    multi-line hash.
  Enabled: false
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstHashElementLineBreak
Layout/FirstMethodArgumentLineBreak:
  Description: |-
    Checks for a line break before the first argument in a
    multi-line method call.
  Enabled: false
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstMethodArgumentLineBreak
Layout/FirstMethodParameterLineBreak:
  Description: |-
    Checks for a line break before the first parameter in a
    multi-line method parameter definition.
  Enabled: false
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstMethodParameterLineBreak
Layout/FirstParameterIndentation:
  Description: |-
    Checks the indentation of the first parameter in a method
    definition. Parameters after the first one are checked by
    Layout/ParameterAlignment, not by this cop.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.77'
  EnforcedStyle: consistent
  SupportedStyles:
    - consistent
    - align_parentheses
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/FirstParameterIndentation
Layout/HashAlignment:
  Description: |-
    Check that the keys, separators, and values of a multi-line hash
    literal are aligned according to configuration. The configuration
    options are:
  Enabled: true
  AllowMultipleStyles: true
  VersionAdded: '0.49'
  VersionChanged: '1.16'
  EnforcedHashRocketStyle: key
  SupportedHashRocketStyles:
    - key
    - separator
    - table
  EnforcedColonStyle: key
  SupportedColonStyles:
    - key
    - separator
    - table
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/HashAlignment
Layout/HeredocArgumentClosingParenthesis:
  Description: |-
    Checks for the placement of the closing parenthesis
    in a method call that passes a HEREDOC string as an argument.
    It should be placed at the end of the line containing the
    opening HEREDOC tag.
  Enabled: false
  StyleGuide: "#heredoc-argument-closing-parentheses"
  VersionAdded: '0.68'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/HeredocArgumentClosingParenthesis
Layout/HeredocIndentation:
  Description: |-
    Checks the indentation of the here document bodies. The bodies
    are indented one step.
  StyleGuide: "#squiggly-heredocs"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.85'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/HeredocIndentation
Layout/IndentationConsistency:
  Description: Checks for inconsistent indentation.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: normal
  SupportedStyles:
    - normal
    - indented_internal_methods
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/IndentationConsistency
Layout/IndentationStyle:
  Description: |-
    Checks that the indentation method is consistent.
    Either tabs only or spaces only are used for indentation.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.82'
  IndentationWidth:
  EnforcedStyle: spaces
  SupportedStyles:
    - spaces
    - tabs
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/IndentationStyle
Layout/IndentationWidth:
  Description: |-
    Checks for indentation that doesn't use the specified number
    of spaces.
  StyleGuide: "#spaces-indentation"
  Enabled: true
  VersionAdded: '0.49'
  Width: 2
  AllowedPatterns: []
  IgnoredPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/IndentationWidth
Layout/InitialIndentation:
  Description: |-
    Checks for indentation of the first non-blank non-comment
    line in a file.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/InitialIndentation
Layout/LeadingCommentSpace:
  Description: |-
    Checks whether comments have a leading space after the
    `#` denoting the start of the comment. The leading space is not
    required for some RDoc special syntax, like `#++`, `#--`,
    `#:nodoc`, `=begin`- and `=end` comments, "shebang" directives,
    or rackup options.
  StyleGuide: "#hash-space"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.73'
  AllowDoxygenCommentStyle: false
  AllowGemfileRubyComment: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/LeadingCommentSpace
Layout/LeadingEmptyLines:
  Description: |-
    Checks for unnecessary leading blank lines at the beginning
    of a file.
  Enabled: true
  VersionAdded: '0.57'
  VersionChanged: '0.77'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/LeadingEmptyLines
Layout/LineEndStringConcatenationIndentation:
  Description: |-
    Checks the indentation of the next line after a line that ends with a string
    literal and a backslash.
  Enabled: pending
  VersionAdded: '1.18'
  EnforcedStyle: aligned
  SupportedStyles:
    - aligned
    - indented
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/LineEndStringConcatenationIndentation
Layout/LineLength:
  Description: |-
    Checks the length of lines in the source code.
    The maximum length is configurable.
    The tab size is configured in the `IndentationWidth`
    of the `Layout/IndentationStyle` cop.
    It also ignores a shebang line by default.
  StyleGuide: "#max-line-length"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '1.4'
  Max: 120
  AllowHeredoc: true
  AllowURI: true
  URISchemes:
    - http
    - https
  IgnoreCopDirectives: true
  AllowedPatterns: []
  IgnoredPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/LineLength
Layout/MultilineArrayBraceLayout:
  Description: |-
    Checks that the closing brace in an array literal is either
    on the same line as the last array element or on a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineArrayBraceLayout
Layout/MultilineArrayLineBreaks:
  Description: |-
    Ensures that each item in a multi-line array
    starts on a separate line.
  Enabled: false
  VersionAdded: '0.67'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineArrayLineBreaks
Layout/MultilineAssignmentLayout:
  Description: |-
    Checks whether the multiline assignments have a newline
    after the assignment operator.
  StyleGuide: "#indent-conditional-assignment"
  Enabled: false
  VersionAdded: '0.49'
  SupportedTypes:
    - block
    - case
    - class
    - if
    - kwbegin
    - module
  EnforcedStyle: new_line
  SupportedStyles:
    - same_line
    - new_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineAssignmentLayout
Layout/MultilineBlockLayout:
  Description: |-
    Checks whether the multiline do end blocks have a newline
    after the start of the block. Additionally, it checks whether the block
    arguments, if any, are on the same line as the start of the
    block. Putting block arguments on separate lines, because the whole
    line would otherwise be too long, is accepted.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineBlockLayout
Layout/MultilineHashBraceLayout:
  Description: |-
    Checks that the closing brace in a hash literal is either
    on the same line as the last hash element, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineHashBraceLayout
Layout/MultilineHashKeyLineBreaks:
  Description: |-
    Ensures that each key in a multi-line hash
    starts on a separate line.
  Enabled: false
  VersionAdded: '0.67'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineHashKeyLineBreaks
Layout/MultilineMethodArgumentLineBreaks:
  Description: |-
    Ensures that each argument in a multi-line method call
    starts on a separate line.
  Enabled: false
  VersionAdded: '0.67'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineMethodArgumentLineBreaks
Layout/MultilineMethodCallBraceLayout:
  Description: |-
    Checks that the closing brace in a method call is either
    on the same line as the last method argument, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineMethodCallBraceLayout
Layout/MultilineMethodCallIndentation:
  Description: |-
    Checks the indentation of the method name part in method calls
    that span more than one line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: aligned
  SupportedStyles:
    - aligned
    - indented
    - indented_relative_to_receiver
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineMethodCallIndentation
Layout/MultilineMethodDefinitionBraceLayout:
  Description: |-
    Checks that the closing brace in a method definition is either
    on the same line as the last method parameter, or a new line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: symmetrical
  SupportedStyles:
    - symmetrical
    - new_line
    - same_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineMethodDefinitionBraceLayout
Layout/MultilineOperationIndentation:
  Description: |-
    Checks the indentation of the right hand side operand in binary operations that
    span more than one line.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: aligned
  SupportedStyles:
    - aligned
    - indented
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/MultilineOperationIndentation
Layout/ParameterAlignment:
  Description: |-
    Here we check if the parameters on a multi-line method call or
    definition are aligned.
  StyleGuide: "#no-double-indent"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.77'
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation
  IndentationWidth:
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/ParameterAlignment
Layout/RedundantLineBreak:
  Description: |-
    Checks whether certain expressions, e.g. method calls, that could fit
    completely on a single line, are broken up into multiple lines unnecessarily.
  Enabled: false
  InspectBlocks: false
  VersionAdded: '1.13'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/RedundantLineBreak
Layout/RescueEnsureAlignment:
  Description: |-
    Checks whether the rescue and ensure keywords are aligned
    properly.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/RescueEnsureAlignment
Layout/SingleLineBlockChain:
  Description: |-
    Checks if method calls are chained onto single line blocks. It considers that a
    line break before the dot improves the readability of the code.
  Enabled: false
  VersionAdded: '1.14'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SingleLineBlockChain
Layout/SpaceAfterColon:
  Description: |-
    Checks for colon (:) not followed by some kind of space.
    N.B. this cop does not handle spaces after a ternary operator, which are
    instead handled by Layout/SpaceAroundOperators.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAfterColon
Layout/SpaceAfterComma:
  Description: Checks for comma (,) not followed by some kind of space.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAfterComma
Layout/SpaceAfterMethodName:
  Description: Checks for space between a method name and a left parenthesis in defs.
  StyleGuide: "#parens-no-spaces"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAfterMethodName
Layout/SpaceAfterNot:
  Description: Checks for space after `!`.
  StyleGuide: "#no-space-bang"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAfterNot
Layout/SpaceAfterSemicolon:
  Description: Checks for semicolon (;) not followed by some kind of space.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAfterSemicolon
Layout/SpaceAroundBlockParameters:
  Description: |-
    Checks the spacing inside and after block parameters pipes. Line breaks
    inside parameter pipes are checked by `Layout/MultilineBlockLayout` and
    not by this cop.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyleInsidePipes: no_space
  SupportedStylesInsidePipes:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAroundBlockParameters
Layout/SpaceAroundEqualsInParameterDefault:
  Description: |-
    Checks that the equals signs in parameter default assignments
    have or don't have surrounding space depending on configuration.
  StyleGuide: "#spaces-around-equals"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAroundEqualsInParameterDefault
Layout/SpaceAroundKeyword:
  Description: Checks the spacing around the keywords.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAroundKeyword
Layout/SpaceAroundMethodCallOperator:
  Description: Checks method call operators to not have spaces around them.
  Enabled: true
  VersionAdded: '0.82'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAroundMethodCallOperator
Layout/SpaceAroundOperators:
  Description: |-
    Checks that operators have space around them, except for ** which
    should or shouldn't have surrounding space depending on configuration.
    It allows vertical alignment consisting of one or more whitespace
    around operators.
  StyleGuide: "#spaces-operators"
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true
  EnforcedStyleForExponentOperator: no_space
  SupportedStylesForExponentOperator:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceAroundOperators
Layout/SpaceBeforeBlockBraces:
  Description: |-
    Checks that block braces have or don't have a space before the opening
    brace depending on configuration.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  EnforcedStyleForEmptyBraces: space
  SupportedStylesForEmptyBraces:
    - space
    - no_space
  VersionChanged: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeBlockBraces
Layout/SpaceBeforeBrackets:
  Description: |-
    Checks for space between the name of a receiver and a left
    brackets.
  StyleGuide: "#space-in-brackets-access"
  Enabled: pending
  VersionAdded: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeBrackets
Layout/SpaceBeforeComma:
  Description: Checks for comma (,) preceded by space.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeComma
Layout/SpaceBeforeComment:
  Description: |-
    Checks for missing space between a token and a comment on the
    same line.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeComment
Layout/SpaceBeforeFirstArg:
  Description: |-
    Checks that exactly one space is used between a method name and the
    first argument for method calls without parentheses.
  Enabled: true
  VersionAdded: '0.49'
  AllowForAlignment: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeFirstArg
Layout/SpaceBeforeSemicolon:
  Description: Checks for semicolon (;) preceded by space.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceBeforeSemicolon
Layout/SpaceInLambdaLiteral:
  Description: |-
    Checks for spaces between `->` and opening parameter
    parenthesis (`(`) in lambda literals.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: require_no_space
  SupportedStyles:
    - require_no_space
    - require_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInLambdaLiteral
Layout/SpaceInsideArrayLiteralBrackets:
  Description: |-
    Checks that brackets used for array literals have or don't have
    surrounding space depending on configuration.
  Enabled: true
  VersionAdded: '0.52'
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
    - compact
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideArrayLiteralBrackets
Layout/SpaceInsideArrayPercentLiteral:
  Description: |-
    Checks for unnecessary additional spaces inside array percent literals
    (i.e. %i/%w).
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideArrayPercentLiteral
Layout/SpaceInsideBlockBraces:
  Description: |-
    Checks that block braces have or don't have surrounding space inside
    them on configuration. For blocks taking parameters, it checks that the
    left brace has or doesn't have trailing space depending on
    configuration.
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStylesForEmptyBraces:
    - space
    - no_space
  SpaceBeforeBlockParameters: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideBlockBraces
Layout/SpaceInsideHashLiteralBraces:
  Description: |-
    Checks that braces used for hash literals have or don't have
    surrounding space depending on configuration.
  StyleGuide: "#spaces-braces"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
    - compact
  EnforcedStyleForEmptyBraces: no_space
  SupportedStylesForEmptyBraces:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideHashLiteralBraces
Layout/SpaceInsideParens:
  Description: Checks for spaces inside ordinary round parentheses.
  StyleGuide: "#spaces-braces"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '1.22'
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - compact
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideParens
Layout/SpaceInsidePercentLiteralDelimiters:
  Description: |-
    Checks for unnecessary additional spaces inside the delimiters of
    %i/%w/%x literals.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsidePercentLiteralDelimiters
Layout/SpaceInsideRangeLiteral:
  Description: Checks for spaces inside range literals.
  StyleGuide: "#no-space-inside-range-literals"
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideRangeLiteral
Layout/SpaceInsideReferenceBrackets:
  Description: |-
    Checks that reference brackets have or don't have
    surrounding space depending on configuration.
  Enabled: true
  VersionAdded: '0.52'
  VersionChanged: '0.53'
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideReferenceBrackets
Layout/SpaceInsideStringInterpolation:
  Description: Checks for whitespace within string interpolations.
  StyleGuide: "#string-interpolation"
  Enabled: true
  VersionAdded: '0.49'
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/SpaceInsideStringInterpolation
Layout/TrailingEmptyLines:
  Description: |-
    Looks for trailing blank lines and a final newline in the
    source code.
  StyleGuide: "#newline-eof"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.77'
  EnforcedStyle: final_newline
  SupportedStyles:
    - final_newline
    - final_blank_line
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/TrailingEmptyLines
Layout/TrailingWhitespace:
  Description: Looks for trailing whitespace in the source code.
  StyleGuide: "#no-trailing-whitespace"
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '1.0'
  AllowInHeredoc: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Layout/TrailingWhitespace
Lint/AmbiguousAssignment:
  Description: Checks for mistyped shorthand assignments.
  Enabled: pending
  VersionAdded: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousAssignment
Lint/AmbiguousBlockAssociation:
  Description: |-
    Checks for ambiguous block association with method
    when param passed without parentheses.
  StyleGuide: "#syntax"
  Enabled: true
  VersionAdded: '0.48'
  VersionChanged: '1.13'
  IgnoredMethods: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousBlockAssociation
Lint/AmbiguousOperator:
  Description: |-
    Checks for ambiguous operators in the first argument of a
    method invocation without parentheses.
  StyleGuide: "#method-invocation-parens"
  Enabled: true
  VersionAdded: '0.17'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousOperator
Lint/AmbiguousOperatorPrecedence:
  Description: |-
    Looks for expressions containing multiple binary operators
    where precedence is ambiguous due to lack of parentheses. For example,
    in `1 + 2 * 3`, the multiplication will happen before the addition, but
    lexically it appears that the addition will happen first.
  Enabled: pending
  VersionAdded: '1.21'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousOperatorPrecedence
Lint/AmbiguousRange:
  Description: Checks for ambiguous ranges.
  Enabled: pending
  VersionAdded: '1.19'
  SafeAutoCorrect: false
  RequireParenthesesForMethodChains: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousRange
Lint/AmbiguousRegexpLiteral:
  Description: |-
    Checks for ambiguous regexp literals in the first argument of
    a method invocation without parentheses.
  Enabled: true
  VersionAdded: '0.17'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AmbiguousRegexpLiteral
Lint/AssignmentInCondition:
  Description: |-
    Checks for assignments in the conditions of
    if/while/until.
  StyleGuide: "#safe-assignment-in-condition"
  Enabled: true
  VersionAdded: '0.9'
  AllowSafeAssignment: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/AssignmentInCondition
Lint/BigDecimalNew:
  Description: |-
    `BigDecimal.new()` is deprecated since BigDecimal 1.3.3.
    This cop identifies places where `BigDecimal.new()`
    can be replaced by `BigDecimal()`.
  Enabled: true
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/BigDecimalNew
Lint/BinaryOperatorWithIdenticalOperands:
  Description: Checks for places where binary operator has identical operands.
  Enabled: true
  Safe: false
  VersionAdded: '0.89'
  VersionChanged: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/BinaryOperatorWithIdenticalOperands
Lint/BooleanSymbol:
  Description: |-
    Checks for `:true` and `:false` symbols.
    In most cases it would be a typo.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.50'
  VersionChanged: '1.22'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/BooleanSymbol
Lint/CircularArgumentReference:
  Description: |-
    Checks for circular argument references in optional keyword
    arguments and optional ordinal arguments.
  Enabled: true
  VersionAdded: '0.33'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/CircularArgumentReference
Lint/ConstantDefinitionInBlock:
  Description: |-
    Do not define constants within a block, since the block's scope does not
    isolate or namespace the constant in any way.
  StyleGuide: "#no-constant-definition-in-block"
  Enabled: true
  VersionAdded: '0.91'
  VersionChanged: '1.3'
  AllowedMethods:
    - enums
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ConstantDefinitionInBlock
Lint/ConstantResolution:
  Description: Check that certain constants are fully qualified.
  Enabled: false
  VersionAdded: '0.86'
  Only: []
  Ignore: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ConstantResolution
Lint/Debugger:
  Description: |-
    Checks for debug calls (such as `debugger` or `binding.pry`) that should
    not be kept for production code.
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '1.10'
  DebuggerReceivers: []
  DebuggerMethods:
    Kernel:
      - binding.irb
    Byebug:
      - byebug
      - remote_byebug
      - Kernel.byebug
      - Kernel.remote_byebug
    Capybara:
      - save_and_open_page
      - save_and_open_screenshot
    debug.rb:
      - binding.b
      - binding.break
      - Kernel.binding.b
      - Kernel.binding.break
    Pry:
      - binding.pry
      - binding.remote_pry
      - binding.pry_remote
      - Pry.rescue
    Rails:
      - debugger
      - Kernel.debugger
    RubyJard:
      - jard
    WebConsole:
      - binding.console
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/Debugger
Lint/DeprecatedClassMethods:
  Description: Checks for uses of the deprecated class method usages.
  Enabled: true
  VersionAdded: '0.19'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DeprecatedClassMethods
Lint/DeprecatedConstants:
  Description: Checks for deprecated constants.
  Enabled: pending
  VersionAdded: '1.8'
  VersionChanged: '1.22'
  DeprecatedConstants:
    NIL:
      Alternative: nil
      DeprecatedVersion: '2.4'
    'TRUE':
      Alternative: 'true'
      DeprecatedVersion: '2.4'
    'FALSE':
      Alternative: 'false'
      DeprecatedVersion: '2.4'
    Net::HTTPServerException:
      Alternative: Net::HTTPClientException
      DeprecatedVersion: '2.6'
    Random::DEFAULT:
      Alternative: Random.new
      DeprecatedVersion: '3.0'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DeprecatedConstants
Lint/DeprecatedOpenSSLConstant:
  Description: |-
    Algorithmic constants for `OpenSSL::Cipher` and `OpenSSL::Digest`
    deprecated since OpenSSL version 2.2.0. Prefer passing a string
    instead.
  Enabled: true
  VersionAdded: '0.84'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DeprecatedOpenSSLConstant
Lint/DisjunctiveAssignmentInConstructor:
  Description: |-
    Checks constructors for disjunctive assignments (`||=`) that should
    be plain assignments.
  Enabled: true
  Safe: false
  VersionAdded: '0.62'
  VersionChanged: '0.88'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DisjunctiveAssignmentInConstructor
Lint/DuplicateBranch:
  Description: |-
    Checks that there are no repeated bodies
    within `if/unless`, `case-when`, `case-in` and `rescue` constructs.
  Enabled: pending
  VersionAdded: '1.3'
  VersionChanged: '1.7'
  IgnoreLiteralBranches: false
  IgnoreConstantBranches: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateBranch
Lint/DuplicateCaseCondition:
  Description: |-
    Checks that there are no repeated conditions
    used in case 'when' expressions.
  Enabled: true
  VersionAdded: '0.45'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateCaseCondition
Lint/DuplicateElsifCondition:
  Description: Checks that there are no repeated conditions used in if 'elsif'.
  Enabled: true
  VersionAdded: '0.88'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateElsifCondition
Lint/DuplicateHashKey:
  Description: Checks for duplicated keys in hash literals.
  Enabled: true
  VersionAdded: '0.34'
  VersionChanged: '0.77'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateHashKey
Lint/DuplicateMethods:
  Description: |-
    Checks for duplicated instance (or singleton) method
    definitions.
  Enabled: true
  VersionAdded: '0.29'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateMethods
Lint/DuplicateRegexpCharacterClassElement:
  Description: Checks for duplicate elements in Regexp character classes.
  Enabled: pending
  VersionAdded: '1.1'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateRegexpCharacterClassElement
Lint/DuplicateRequire:
  Description: Checks for duplicate `require`s and `require_relative`s.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.90'
  VersionChanged: '1.28'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateRequire
Lint/DuplicateRescueException:
  Description: |-
    Checks that there are no repeated exceptions
    used in 'rescue' expressions.
  Enabled: true
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/DuplicateRescueException
Lint/EachWithObjectArgument:
  Description: |-
    Checks if each_with_object is called with an immutable
    argument. Since the argument is the object that the given block shall
    make calls on to build something based on the enumerable that
    each_with_object iterates over, an immutable argument makes no sense.
    It's definitely a bug.
  Enabled: true
  VersionAdded: '0.31'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EachWithObjectArgument
Lint/ElseLayout:
  Description: |-
    Checks for odd `else` block layout - like
    having an expression on the same line as the `else` keyword,
    which is usually a mistake.
  Enabled: true
  VersionAdded: '0.17'
  VersionChanged: '1.2'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ElseLayout
Lint/EmptyBlock:
  Description: |-
    Checks for blocks without a body.
    Such empty blocks are typically an oversight or we should provide a comment
    be clearer what we're aiming for.
  Enabled: pending
  VersionAdded: '1.1'
  VersionChanged: '1.15'
  AllowComments: true
  AllowEmptyLambdas: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyBlock
Lint/EmptyClass:
  Description: |-
    Checks for classes and metaclasses without a body.
    Such empty classes and metaclasses are typically an oversight or we should provide a comment
    to be clearer what we're aiming for.
  Enabled: pending
  VersionAdded: '1.3'
  AllowComments: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyClass
Lint/EmptyConditionalBody:
  Description: Checks for the presence of `if`, `elsif` and `unless` branches without
    a body.
  Enabled: true
  AllowComments: true
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyConditionalBody
Lint/EmptyEnsure:
  Description: Checks for empty `ensure` blocks
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.48'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyEnsure
Lint/EmptyExpression:
  Description: Checks for the presence of empty expressions.
  Enabled: true
  VersionAdded: '0.45'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyExpression
Lint/EmptyFile:
  Description: Enforces that Ruby source files are not empty.
  Enabled: true
  AllowComments: true
  VersionAdded: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyFile
Lint/EmptyInPattern:
  Description: Checks for the presence of `in` pattern branches without a body.
  Enabled: pending
  AllowComments: true
  VersionAdded: '1.16'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyInPattern
Lint/EmptyInterpolation:
  Description: Checks for empty interpolation.
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.45'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyInterpolation
Lint/EmptyWhen:
  Description: Checks for the presence of `when` branches without a body.
  Enabled: true
  AllowComments: true
  VersionAdded: '0.45'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EmptyWhen
Lint/EnsureReturn:
  Description: |-
    Checks for `return` from an `ensure` block.
    `return` from an ensure block is a dangerous code smell as it
    will take precedence over any exception being raised,
    and the exception will be silently thrown away as if it were rescued.
  StyleGuide: "#no-return-ensure"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/EnsureReturn
Lint/ErbNewArguments:
  Description: This cop emulates the following Ruby warnings in Ruby 2.6.
  Enabled: true
  VersionAdded: '0.56'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ErbNewArguments
Lint/FlipFlop:
  Description: |-
    Looks for uses of flip-flop operator
    based on the Ruby Style Guide.
  StyleGuide: "#no-flip-flops"
  Enabled: true
  VersionAdded: '0.16'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/FlipFlop
Lint/FloatComparison:
  Description: Checks for the presence of precise comparison of floating point numbers.
  StyleGuide: "#float-comparison"
  Enabled: true
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/FloatComparison
Lint/FloatOutOfRange:
  Description: |-
    Identifies Float literals which are, like, really really really
    really really really really really big. Too big. No-one needs Floats
    that big. If you need a float that big, something is wrong with you.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/FloatOutOfRange
Lint/FormatParameterMismatch:
  Description: |-
    This lint sees if there is a mismatch between the number of
    expected fields for format/sprintf/#% and what is actually
    passed as arguments.
  Enabled: true
  VersionAdded: '0.33'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/FormatParameterMismatch
Lint/HashCompareByIdentity:
  Description: |-
    Prefer using `Hash#compare_by_identity` rather than using `object_id`
    for hash keys.
  StyleGuide: "#identity-comparison"
  Enabled: true
  Safe: false
  VersionAdded: '0.93'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/HashCompareByIdentity
Lint/HeredocMethodCallPosition:
  Description: |-
    Checks for the ordering of a method call where
    the receiver of the call is a HEREDOC.
  Enabled: false
  StyleGuide: "#heredoc-method-calls"
  VersionAdded: '0.68'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/HeredocMethodCallPosition
Lint/IdentityComparison:
  Description: Prefer `equal?` over `==` when comparing `object_id`.
  Enabled: true
  StyleGuide: "#identity-comparison"
  VersionAdded: '0.91'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/IdentityComparison
Lint/ImplicitStringConcatenation:
  Description: |-
    Checks for implicit string concatenation of string literals
    which are on the same line.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ImplicitStringConcatenation
Lint/IncompatibleIoSelectWithFiberScheduler:
  Description: This cop checks for `IO.select` that is incompatible with Fiber Scheduler
    since Ruby 3.0.
  Enabled: pending
  SafeAutoCorrect: false
  VersionAdded: '1.21'
  VersionChanged: '1.24'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/IncompatibleIoSelectWithFiberScheduler
Lint/IneffectiveAccessModifier:
  Description: |-
    Checks for `private` or `protected` access modifiers which are
    applied to a singleton method. These access modifiers do not make
    singleton methods private/protected. `private_class_method` can be
    used for that.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/IneffectiveAccessModifier
Lint/InheritException:
  Description: |-
    Looks for error classes inheriting from `Exception`.
    It is configurable to suggest using either `StandardError` (default) or
    `RuntimeError` instead.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.41'
  VersionChanged: '1.26'
  EnforcedStyle: standard_error
  SupportedStyles:
    - standard_error
    - runtime_error
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/InheritException
Lint/InterpolationCheck:
  Description: Checks for interpolation in a single quoted string.
  Enabled: true
  Safe: false
  VersionAdded: '0.50'
  VersionChanged: '0.87'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/InterpolationCheck
Lint/LambdaWithoutLiteralBlock:
  Description: |-
    Checks uses of lambda without a literal block.
    It emulates the following warning in Ruby 3.0:
  Enabled: pending
  VersionAdded: '1.8'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/LambdaWithoutLiteralBlock
Lint/LiteralAsCondition:
  Description: |-
    Checks for literals used as the conditions or as
    operands in and/or expressions serving as the conditions of
    if/while/until/case-when/case-in.
  Enabled: true
  VersionAdded: '0.51'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/LiteralAsCondition
Lint/LiteralInInterpolation:
  Description: Checks for interpolated literals.
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.32'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/LiteralInInterpolation
Lint/Loop:
  Description: Checks for uses of `begin...end while/until something`.
  StyleGuide: "#loop-with-break"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '1.3'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/Loop
Lint/MissingCopEnableDirective:
  Description: |-
    Checks that there is an `# rubocop:enable ...` statement
    after a `# rubocop:disable ...` statement. This will prevent leaving
    cop disables on wide ranges of code, that latter contributors to
    a file wouldn't be aware of.
  Enabled: true
  VersionAdded: '0.52'
  MaximumRangeSize: .inf
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/MissingCopEnableDirective
Lint/MissingSuper:
  Description: |-
    Checks for the presence of constructors and lifecycle callbacks
    without calls to `super`.
  Enabled: true
  VersionAdded: '0.89'
  VersionChanged: '1.4'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/MissingSuper
Lint/MixedRegexpCaptureTypes:
  Description: |-
    Do not mix named captures and numbered captures in a Regexp literal
    because numbered capture is ignored if they're mixed.
    Replace numbered captures with non-capturing groupings or
    named captures.
  Enabled: true
  VersionAdded: '0.85'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/MixedRegexpCaptureTypes
Lint/MultipleComparison:
  Description: |-
    In math and Python, we can use `x < y < z` style comparison to compare
    multiple value. However, we can't use the comparison in Ruby. However,
    the comparison is not syntax error. This cop checks the bad usage of
    comparison operators.
  Enabled: true
  VersionAdded: '0.47'
  VersionChanged: '1.1'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/MultipleComparison
Lint/NestedMethodDefinition:
  Description: Checks for nested method definitions.
  StyleGuide: "#no-nested-methods"
  Enabled: true
  VersionAdded: '0.32'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NestedMethodDefinition
Lint/NestedPercentLiteral:
  Description: Checks for nested percent literals.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NestedPercentLiteral
Lint/NextWithoutAccumulator:
  Description: Don't omit the accumulator when calling `next` in a `reduce` block.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NextWithoutAccumulator
Lint/NoReturnInBeginEndBlocks:
  Description: |-
    Checks for the presence of a `return` inside a `begin..end` block
    in assignment contexts.
    In this situation, the `return` will result in an exit from the current
    method, possibly leading to unexpected behavior.
  Enabled: pending
  VersionAdded: '1.2'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NoReturnInBeginEndBlocks
Lint/NonDeterministicRequireOrder:
  Description: |-
    `Dir[...]` and `Dir.glob(...)` do not make any guarantees about
    the order in which files are returned. The final order is
    determined by the operating system and file system.
    This means that using them in cases where the order matters,
    such as requiring files, can lead to intermittent failures
    that are hard to debug. To ensure this doesn't happen,
    always sort the list.
  Enabled: true
  VersionAdded: '0.78'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NonDeterministicRequireOrder
Lint/NonLocalExitFromIterator:
  Description: |-
    Checks for non-local exits from iterators without a return
    value. It registers an offense under these conditions:
  Enabled: true
  VersionAdded: '0.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NonLocalExitFromIterator
Lint/NumberConversion:
  Description: |-
    Warns the usage of unsafe number conversions. Unsafe
    number conversion can cause unexpected error if auto type conversion
    fails. Cop prefer parsing with number class instead.
  Enabled: false
  VersionAdded: '0.53'
  VersionChanged: '1.1'
  SafeAutoCorrect: false
  IgnoredMethods: []
  IgnoredClasses:
    - Time
    - DateTime
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NumberConversion
Lint/NumberedParameterAssignment:
  Description: |-
    Checks for uses of numbered parameter assignment.
    It emulates the following warning in Ruby 2.7:
  Enabled: pending
  VersionAdded: '1.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/NumberedParameterAssignment
Lint/OrAssignmentToConstant:
  Description: Checks for unintended or-assignment to a constant.
  Enabled: pending
  Safe: false
  VersionAdded: '1.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/OrAssignmentToConstant
Lint/OrderedMagicComments:
  Description: |-
    Checks the proper ordering of magic comments and whether
    a magic comment is not placed before a shebang.
  Enabled: true
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/OrderedMagicComments
Lint/OutOfRangeRegexpRef:
  Description: |-
    This cops looks for references of Regexp captures that are out of range
    and thus always returns nil.
  Enabled: true
  Safe: false
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/OutOfRangeRegexpRef
Lint/ParenthesesAsGroupedExpression:
  Description: |-
    Checks for space between the name of a called method and a left
    parenthesis.
  StyleGuide: "#parens-no-spaces"
  Enabled: true
  VersionAdded: '0.12'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ParenthesesAsGroupedExpression
Lint/PercentStringArray:
  Description: Checks for quotes and commas in %w, e.g. `%w('foo', "bar")`
  Enabled: true
  Safe: false
  VersionAdded: '0.41'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/PercentStringArray
Lint/PercentSymbolArray:
  Description: Checks for colons and commas in %i, e.g. `%i(:foo, :bar)`
  Enabled: true
  VersionAdded: '0.41'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/PercentSymbolArray
Lint/RaiseException:
  Description: |-
    Checks for `raise` or `fail` statements which are
    raising `Exception` class.
  StyleGuide: "#raise-exception"
  Enabled: true
  Safe: false
  VersionAdded: '0.81'
  VersionChanged: '0.86'
  AllowedImplicitNamespaces:
    - Gem
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RaiseException
Lint/RandOne:
  Description: |-
    Checks for `rand(1)` calls.
    Such calls always return `0`.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RandOne
Lint/RedundantCopDisableDirective:
  Description: |-
    Detects instances of rubocop:disable comments that can be
    removed without causing any offenses to be reported. It's implemented
    as a cop in that it inherits from the Cop base class and calls
    add_offense. The unusual part of its implementation is that it doesn't
    have any on_* methods or an investigate method. This means that it
    doesn't take part in the investigation phase when the other cops do
    their work. Instead, it waits until it's called in a later stage of the
    execution. The reason it can't be implemented as a normal cop is that
    it depends on the results of all other cops to do its work.
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantCopDisableDirective
Lint/RedundantCopEnableDirective:
  Description: |-
    Detects instances of rubocop:enable comments that can be
    removed.
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantCopEnableDirective
Lint/RedundantDirGlobSort:
  Description: |-
    Sort globbed results by default in Ruby 3.0.
    This cop checks for redundant `sort` method to `Dir.glob` and `Dir[]`.
  Enabled: pending
  VersionAdded: '1.8'
  VersionChanged: '1.26'
  SafeAutoCorrect: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantDirGlobSort
Lint/RedundantRequireStatement:
  Description: Checks for unnecessary `require` statement.
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantRequireStatement
Lint/RedundantSafeNavigation:
  Description: |-
    Checks for redundant safe navigation calls.
    `instance_of?`, `kind_of?`, `is_a?`, `eql?`, `respond_to?`, and `equal?` methods
    are checked by default. These are customizable with `AllowedMethods` option.
  Enabled: true
  VersionAdded: '0.93'
  AllowedMethods:
    - instance_of?
    - kind_of?
    - is_a?
    - eql?
    - respond_to?
    - equal?
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantSafeNavigation
Lint/RedundantSplatExpansion:
  Description: Checks for unneeded usages of splat expansion
  Enabled: true
  VersionAdded: '0.76'
  VersionChanged: '1.7'
  AllowPercentLiteralArrayArgument: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantSplatExpansion
Lint/RedundantStringCoercion:
  Description: |-
    Checks for string conversion in string interpolation,
    which is redundant.
  StyleGuide: "#no-to-s"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.77'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantStringCoercion
Lint/RedundantWithIndex:
  Description: Checks for redundant `with_index`.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantWithIndex
Lint/RedundantWithObject:
  Description: Checks for redundant `with_object`.
  Enabled: true
  VersionAdded: '0.51'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RedundantWithObject
Lint/RefinementImportMethods:
  Description: |-
    Checks if `include` or `prepend` is called in `refine` block.
    These methods are deprecated and should be replaced with `Refinement#import_methods`.
  Enabled: pending
  SafeAutoCorrect: false
  VersionAdded: '1.27'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RefinementImportMethods
Lint/RegexpAsCondition:
  Description: |-
    Checks for regexp literals used as `match-current-line`.
    If a regexp literal is in condition, the regexp matches `$_` implicitly.
  Enabled: true
  VersionAdded: '0.51'
  VersionChanged: '0.86'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RegexpAsCondition
Lint/RequireParentheses:
  Description: |-
    Checks for expressions where there is a call to a predicate
    method with at least one argument, where no parentheses are used around
    the parameter list, and a boolean operator, && or ||, is used in the
    last argument.
  Enabled: true
  VersionAdded: '0.18'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RequireParentheses
Lint/RequireRelativeSelfPath:
  Description: Checks for uses a file requiring itself with `require_relative`.
  Enabled: pending
  VersionAdded: '1.22'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RequireRelativeSelfPath
Lint/RescueException:
  Description: Checks for `rescue` blocks targeting the Exception class.
  StyleGuide: "#no-blind-rescues"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.27'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RescueException
Lint/RescueType:
  Description: |-
    Check for arguments to `rescue` that will result in a `TypeError`
    if an exception is raised.
  Enabled: true
  VersionAdded: '0.49'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/RescueType
Lint/ReturnInVoidContext:
  Description: |-
    Checks for the use of a return with a value in a context
    where the value will be ignored. (initialize and setter methods)
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ReturnInVoidContext
Lint/SafeNavigationChain:
  Description: |-
    The safe navigation operator returns nil if the receiver is
    nil. If you chain an ordinary method call after a safe
    navigation operator, it raises NoMethodError. We should use a
    safe navigation operator after a safe navigation operator.
    This cop checks for the problem outlined above.
  Enabled: true
  VersionAdded: '0.47'
  VersionChanged: '0.77'
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!
    - in?
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SafeNavigationChain
Lint/SafeNavigationConsistency:
  Description: |-
    Check to make sure that if safe navigation is used for a method
    call in an `&&` or `||` condition that safe navigation is used for all
    method calls on that same object.
  Enabled: true
  VersionAdded: '0.55'
  VersionChanged: '0.77'
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SafeNavigationConsistency
Lint/SafeNavigationWithEmpty:
  Description: |-
    Checks to make sure safe navigation isn't used with `empty?` in
    a conditional.
  Enabled: true
  VersionAdded: '0.62'
  VersionChanged: '0.87'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SafeNavigationWithEmpty
Lint/ScriptPermission:
  Description: |-
    Checks if a file which has a shebang line as
    its first line is granted execute permission.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ScriptPermission
Lint/SelfAssignment:
  Description: Checks for self-assignments.
  Enabled: true
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SelfAssignment
Lint/SendWithMixinArgument:
  Description: |-
    This cop checks for `send`, `public_send`, and `__send__` methods
    when using mix-in.
  Enabled: true
  VersionAdded: '0.75'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SendWithMixinArgument
Lint/ShadowedArgument:
  Description: Checks for shadowed arguments.
  Enabled: true
  VersionAdded: '0.52'
  IgnoreImplicitReferences: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ShadowedArgument
Lint/ShadowedException:
  Description: |-
    Checks for a rescued exception that get shadowed by a
    less specific exception being rescued before a more specific
    exception is rescued.
  Enabled: true
  VersionAdded: '0.41'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ShadowedException
Lint/ShadowingOuterLocalVariable:
  Description: |-
    Checks for the use of local variable names from an outer scope
    in block arguments or block-local variables. This mirrors the warning
    given by `ruby -cw` prior to Ruby 2.6:
    "shadowing outer local variable - foo".
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ShadowingOuterLocalVariable
Lint/StructNewOverride:
  Description: |-
    Checks unexpected overrides of the `Struct` built-in methods
    via `Struct.new`.
  Enabled: true
  VersionAdded: '0.81'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/StructNewOverride
Lint/SuppressedException:
  Description: Checks for `rescue` blocks with no body.
  StyleGuide: "#dont-hide-exceptions"
  Enabled: true
  AllowComments: true
  AllowNil: true
  VersionAdded: '0.9'
  VersionChanged: '1.12'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SuppressedException
Lint/SymbolConversion:
  Description: |-
    Checks for uses of literal strings converted to
    a symbol where a literal symbol could be used instead.
  Enabled: pending
  VersionAdded: '1.9'
  VersionChanged: '1.16'
  EnforcedStyle: strict
  SupportedStyles:
    - strict
    - consistent
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/SymbolConversion
Lint/Syntax:
  Description: |-
    Repacks Parser's diagnostics/errors
    into RuboCop's offenses.
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/Syntax
Lint/ToEnumArguments:
  Description: |-
    Ensures that `to_enum`/`enum_for`, called for the current method,
    has correct arguments.
  Enabled: pending
  VersionAdded: '1.1'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ToEnumArguments
Lint/ToJSON:
  Description: |-
    Checks to make sure `#to_json` includes an optional argument.
    When overriding `#to_json`, callers may invoke JSON
    generation via `JSON.generate(your_obj)`.  Since `JSON#generate` allows
    for an optional argument, your method should too.
  Enabled: true
  VersionAdded: '0.66'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/ToJSON
Lint/TopLevelReturnWithArgument:
  Description: |-
    Checks for top level return with arguments. If there is a
    top-level return statement with an argument, then the argument is
    always ignored. This is detected automatically since Ruby 2.7.
  Enabled: true
  VersionAdded: '0.89'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/TopLevelReturnWithArgument
Lint/TrailingCommaInAttributeDeclaration:
  Description: |-
    Checks for trailing commas in attribute declarations, such as
    `#attr_reader`. Leaving a trailing comma will nullify the next method
    definition by overriding it with a getter method.
  Enabled: true
  VersionAdded: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/TrailingCommaInAttributeDeclaration
Lint/TripleQuotes:
  Description: |-
    Checks for "triple quotes" (strings delimited by any odd number
    of quotes greater than 1).
  Enabled: pending
  VersionAdded: '1.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/TripleQuotes
Lint/UnderscorePrefixedVariableName:
  Description: |-
    Checks for underscore-prefixed variables that are actually
    used.
  Enabled: true
  VersionAdded: '0.21'
  AllowKeywordBlockArguments: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnderscorePrefixedVariableName
Lint/UnexpectedBlockArity:
  Description: |-
    Checks for a block that is known to need more positional
    block arguments than are given (by default this is configured for
    `Enumerable` methods needing 2 arguments). Optional arguments are allowed,
    although they don't generally make sense as the default value will
    be used. Blocks that have no receiver, or take splatted arguments
    (ie. `*args`) are always accepted.
  Enabled: pending
  Safe: false
  VersionAdded: '1.5'
  Methods:
    chunk_while: 2
    each_with_index: 2
    each_with_object: 2
    inject: 2
    max: 2
    min: 2
    minmax: 2
    reduce: 2
    slice_when: 2
    sort: 2
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnexpectedBlockArity
Lint/UnifiedInteger:
  Description: Checks for using Fixnum or Bignum constant.
  Enabled: true
  VersionAdded: '0.43'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnifiedInteger
Lint/UnmodifiedReduceAccumulator:
  Description: |-
    Looks for `reduce` or `inject` blocks where the value returned (implicitly or
    explicitly) does not include the accumulator. A block is considered valid as
    long as at least one return value includes the accumulator.
  Enabled: pending
  VersionAdded: '1.1'
  VersionChanged: '1.5'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnmodifiedReduceAccumulator
Lint/UnreachableCode:
  Description: |-
    Checks for unreachable code.
    The check are based on the presence of flow of control
    statement in non-final position in `begin` (implicit) blocks.
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnreachableCode
Lint/UnreachableLoop:
  Description: Checks for loops that will have at most one iteration.
  Enabled: true
  VersionAdded: '0.89'
  VersionChanged: '1.7'
  AllowedPatterns:
    - !ruby/regexp /(exactly|at_least|at_most)\(\d+\)\.times/
  IgnoredPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnreachableLoop
Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.22'
  IgnoreEmptyBlocks: true
  AllowUnusedKeywordArguments: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnusedBlockArgument
Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.21'
  VersionChanged: '0.81'
  AllowUnusedKeywordArguments: false
  IgnoreEmptyMethods: true
  IgnoreNotImplementedMethods: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UnusedMethodArgument
Lint/UriEscapeUnescape:
  Description: |-
    Identifies places where `URI.escape` can be replaced by
    `CGI.escape`, `URI.encode_www_form`, or `URI.encode_www_form_component`
    depending on your specific use case.
    Also this cop identifies places where `URI.unescape` can be replaced by
    `CGI.unescape`, `URI.decode_www_form`,
    or `URI.decode_www_form_component` depending on your specific use case.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UriEscapeUnescape
Lint/UriRegexp:
  Description: |-
    Identifies places where `URI.regexp` is obsolete and should
    not be used. Instead, use `URI::DEFAULT_PARSER.make_regexp`.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UriRegexp
Lint/UselessAccessModifier:
  Description: |-
    Checks for redundant access modifiers, including those with no
    code, those which are repeated, and leading `public` modifiers in a
    class or module body. Conditionally-defined methods are considered as
    always being defined, and thus access modifiers guarding such methods
    are not redundant.
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.83'
  ContextCreatingMethods: []
  MethodCreatingMethods: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessAccessModifier
Lint/UselessAssignment:
  Description: |-
    Checks for every useless assignment to local variable in every
    scope.
    The basic idea for this cop was from the warning of `ruby -cw`:
  StyleGuide: "#underscore-unused-vars"
  Enabled: true
  VersionAdded: '0.11'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessAssignment
Lint/UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true
  VersionAdded: '0.17'
  VersionChanged: "<<next>>"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessElseWithoutRescue
Lint/UselessMethodDefinition:
  Description: |-
    Checks for useless method definitions, specifically: empty constructors
    and methods just delegating to `super`.
  Enabled: true
  VersionAdded: '0.90'
  VersionChanged: '0.91'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessMethodDefinition
Lint/UselessRuby2Keywords:
  Description: Looks for `ruby2_keywords` calls for methods that do not need it.
  Enabled: pending
  VersionAdded: '1.23'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessRuby2Keywords
Lint/UselessSetterCall:
  Description: |-
    Checks for setter call to local variable as the final
    expression of a function definition.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.13'
  VersionChanged: '1.2'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessSetterCall
Lint/UselessTimes:
  Description: |-
    Checks for uses of `Integer#times` that will never yield
    (when the integer <= 0) or that will only ever yield once
    (`1.times`).
  Enabled: true
  VersionAdded: '0.91'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/UselessTimes
Lint/Void:
  Description: |-
    Checks for operators, variables, literals, and nonmutating
    methods used in void context.
  Enabled: true
  VersionAdded: '0.9'
  CheckForMethodsWithNoSideEffects: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Lint/Void
Metrics/AbcSize:
  Description: |-
    Checks that the ABC size of methods is not higher than the
    configured maximum. The ABC size is based on assignments, branches
    (method calls), and conditions. See http://c2.com/cgi/wiki?AbcMetric
    and https://en.wikipedia.org/wiki/ABC_Software_Metric.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/AbcSize
  Enabled: true
  VersionAdded: '0.27'
  VersionChanged: '1.5'
  IgnoredMethods: []
  CountRepeatedAttributes: true
  Max: 17
Metrics/BlockLength:
  Description: |-
    Checks if the length of a block exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
    The cop can be configured to ignore blocks passed to certain methods.
  Enabled: true
  VersionAdded: '0.44'
  VersionChanged: '1.5'
  CountComments: false
  Max: 25
  CountAsOne: []
  ExcludedMethods: []
  IgnoredMethods:
    - refine
  Exclude:
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/BlockLength
Metrics/BlockNesting:
  Description: |-
    Checks for excessive nesting of conditional and looping
    constructs.
  StyleGuide: "#three-is-the-number-thou-shalt-count"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.47'
  CountBlocks: false
  Max: 3
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/BlockNesting
Metrics/ClassLength:
  Description: |-
    Checks if the length a class exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.87'
  CountComments: false
  Max: 100
  CountAsOne: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/ClassLength
Metrics/CyclomaticComplexity:
  Description: |-
    Checks that the cyclomatic complexity of methods is not higher
    than the configured maximum. The cyclomatic complexity is the number of
    linearly independent paths through a method. The algorithm counts
    decision points and adds one.
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.81'
  IgnoredMethods: []
  Max: 7
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/CyclomaticComplexity
Metrics/MethodLength:
  Description: |-
    Checks if the length of a method exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  StyleGuide: "#short-methods"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '1.5'
  CountComments: false
  Max: 10
  CountAsOne: []
  ExcludedMethods: []
  IgnoredMethods: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/MethodLength
Metrics/ModuleLength:
  Description: |-
    Checks if the length a module exceeds some maximum value.
    Comment lines can optionally be ignored.
    The maximum allowed length is configurable.
  Enabled: true
  VersionAdded: '0.31'
  VersionChanged: '0.87'
  CountComments: false
  Max: 100
  CountAsOne: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/ModuleLength
Metrics/ParameterLists:
  Description: Checks for methods with too many parameters.
  StyleGuide: "#too-many-params"
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '1.5'
  Max: 5
  CountKeywordArgs: true
  MaxOptionalParameters: 3
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/ParameterLists
Metrics/PerceivedComplexity:
  Description: Checks the coplexity for the human reader.
  Enabled: true
  VersionAdded: '0.25'
  VersionChanged: '0.81'
  IgnoredMethods: []
  Max: 8
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Metrics/PerceivedComplexity
Migration/DepartmentName:
  Description: |-
    Check that cop names in rubocop:disable comments are given with
    department name.
  Enabled: true
  VersionAdded: '0.75'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Migration/DepartmentName
Naming/AccessorMethodName:
  Description: |-
    Makes sure that accessor methods are named properly. Applies
    to both instance and class methods.
  StyleGuide: "#accessor_mutator_method_names"
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/AccessorMethodName
Naming/AsciiIdentifiers:
  Description: |-
    Checks for non-ascii characters in identifier and constant names.
    Identifiers are always checked and whether constants are checked
    can be controlled using AsciiConstants config.
  StyleGuide: "#english-identifiers"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '0.87'
  AsciiConstants: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/AsciiIdentifiers
Naming/BinaryOperatorParameterName:
  Description: |-
    Makes sure that certain binary operator methods have their
    sole  parameter named `other`.
  StyleGuide: "#other-arg"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.2'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/BinaryOperatorParameterName
Naming/BlockForwarding:
  Description: In Ruby 3.1, anonymous block forwarding has been added.
  StyleGuide: "#block-forwarding"
  Enabled: pending
  VersionAdded: '1.24'
  EnforcedStyle: anonymous
  SupportedStyles:
    - anonymous
    - explicit
  BlockForwardingName: block
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/BlockForwarding
Naming/BlockParameterName:
  Description: |-
    Checks block parameter names for how descriptive they
    are. It is highly configurable.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.77'
  MinNameLength: 1
  AllowNamesEndingInNumbers: true
  AllowedNames: []
  ForbiddenNames: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/BlockParameterName
Naming/ClassAndModuleCamelCase:
  Description: |-
    Checks for class and module names with
    an underscore in them.
  StyleGuide: "#camelcase-classes"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '0.85'
  AllowedNames:
    - module_parent
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/ClassAndModuleCamelCase
Naming/ConstantName:
  Description: |-
    Checks whether constant names are written using
    SCREAMING_SNAKE_CASE.
  StyleGuide: "#screaming-snake-case"
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/ConstantName
Naming/FileName:
  Description: |-
    Makes sure that Ruby source files have snake_case
    names. Ruby scripts (i.e. source files with a shebang in the
    first line) are ignored.
  StyleGuide: "#snake-case-files"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.23'
  Exclude: []
  ExpectMatchingDefinition: false
  CheckDefinitionPathHierarchy: true
  CheckDefinitionPathHierarchyRoots:
    - lib
    - spec
    - test
    - src
  Regex:
  IgnoreExecutableScripts: true
  AllowedAcronyms:
    - CLI
    - DSL
    - ACL
    - API
    - ASCII
    - CPU
    - CSS
    - DNS
    - EOF
    - GUID
    - HTML
    - HTTP
    - HTTPS
    - ID
    - IP
    - JSON
    - LHS
    - QPS
    - RAM
    - RHS
    - RPC
    - SLA
    - SMTP
    - SQL
    - SSH
    - TCP
    - TLS
    - TTL
    - UDP
    - UI
    - UID
    - UUID
    - URI
    - URL
    - UTF8
    - VM
    - XML
    - XMPP
    - XSRF
    - XSS
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/FileName
Naming/HeredocDelimiterCase:
  Description: |-
    Checks that your heredocs are using the configured case.
    By default it is configured to enforce uppercase heredocs.
  StyleGuide: "#heredoc-delimiters"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.2'
  EnforcedStyle: uppercase
  SupportedStyles:
    - lowercase
    - uppercase
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/HeredocDelimiterCase
Naming/HeredocDelimiterNaming:
  Description: |-
    Checks that your heredocs are using meaningful delimiters.
    By default it disallows `END` and `EO*`, and can be configured through
    forbidden listing additional delimiters.
  StyleGuide: "#heredoc-delimiters"
  Enabled: true
  VersionAdded: '0.50'
  ForbiddenDelimiters:
    - !ruby/regexp /(^|\s)(EO[A-Z]{1}|END)(\s|$)/
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/HeredocDelimiterNaming
Naming/InclusiveLanguage:
  Description: |-
    This cops recommends the use of inclusive language instead of problematic terms.
    The cop can check the following locations for offenses:
      - identifiers
      - constants
      - variables
      - strings
      - symbols
      - comments
      - file paths
    Each of these locations can be individually enabled/disabled via configuration,
    for example CheckIdentifiers = true/false.
  Enabled: false
  VersionAdded: '1.18'
  VersionChanged: '1.21'
  CheckIdentifiers: true
  CheckConstants: true
  CheckVariables: true
  CheckStrings: false
  CheckSymbols: true
  CheckComments: true
  CheckFilepaths: true
  FlaggedTerms:
    whitelist:
      Regex: !ruby/regexp /white[-_\s]?list/
      Suggestions:
        - allowlist
        - permit
    blacklist:
      Regex: !ruby/regexp /black[-_\s]?list/
      Suggestions:
        - denylist
        - block
    slave:
      WholeWord: true
      Suggestions:
        - replica
        - secondary
        - follower
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/InclusiveLanguage
Naming/MemoizedInstanceVariableName:
  Description: |-
    Checks for memoized methods whose instance variable name
    does not match the method name. Applies to both regular methods
    (defined with `def`) and dynamic methods (defined with
    `define_method` or `define_singleton_method`).
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '1.2'
  EnforcedStyleForLeadingUnderscores: disallowed
  SupportedStylesForLeadingUnderscores:
    - disallowed
    - required
    - optional
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/MemoizedInstanceVariableName
Naming/MethodName:
  Description: |-
    Makes sure that all methods use the configured style,
    snake_case or camelCase, for their names.
  StyleGuide: "#snake-case-symbols-methods-vars"
  Enabled: true
  VersionAdded: '0.50'
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
  AllowedPatterns: []
  IgnoredPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/MethodName
Naming/MethodParameterName:
  Description: |-
    Checks method parameter names for how descriptive they
    are. It is highly configurable.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '0.77'
  MinNameLength: 3
  AllowNamesEndingInNumbers: true
  AllowedNames:
    - at
    - by
    - db
    - id
    - in
    - io
    - ip
    - of
    - 'on'
    - os
    - pp
    - to
  ForbiddenNames: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/MethodParameterName
Naming/PredicateName:
  Description: Makes sure that predicates are named properly.
  StyleGuide: "#bool-methods-qmark"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '0.77'
  NamePrefix:
    - is_
    - has_
    - have_
  ForbiddenPrefixes:
    - is_
    - has_
    - have_
  AllowedMethods:
    - is_a?
  MethodDefinitionMacros:
    - define_method
    - define_singleton_method
  Exclude:
    - spec/**/*
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/PredicateName
Naming/RescuedExceptionsVariableName:
  Description: |-
    Makes sure that rescued exceptions variables are named as
    expected.
  Enabled: true
  VersionAdded: '0.67'
  VersionChanged: '0.68'
  PreferredName: e
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/RescuedExceptionsVariableName
Naming/VariableName:
  Description: |-
    Makes sure that all variables use the configured style,
    snake_case or camelCase, for their names.
  StyleGuide: "#snake-case-symbols-methods-vars"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.8'
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case
    - camelCase
  AllowedIdentifiers: []
  AllowedPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/VariableName
Naming/VariableNumber:
  Description: |-
    Makes sure that all numbered variables use the
    configured style, snake_case, normalcase, or non_integer,
    for their numbering.
  StyleGuide: "#snake-case-symbols-methods-vars-with-numbers"
  Enabled: true
  VersionAdded: '0.50'
  VersionChanged: '1.4'
  EnforcedStyle: normalcase
  SupportedStyles:
    - snake_case
    - normalcase
    - non_integer
  CheckMethodNames: true
  CheckSymbols: true
  AllowedIdentifiers:
    - capture3
    - iso8601
    - rfc1123_date
    - rfc822
    - rfc2822
    - rfc3339
  AllowedPatterns: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/VariableNumber
Security/CompoundHash:
  Description: |-
    Checks for implementations of the `hash` method which combine
    values using custom logic instead of delegating to `Array#hash`.
  Enabled: pending
  VersionAdded: '1.28'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/CompoundHash
Security/Eval:
  Description: Checks for the use of `Kernel#eval` and `Binding#eval`.
  Enabled: true
  VersionAdded: '0.47'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/Eval
Security/IoMethods:
  Description: |-
    Checks for the first argument to `IO.read`, `IO.binread`, `IO.write`, `IO.binwrite`,
    `IO.foreach`, and `IO.readlines`.
  Enabled: pending
  Safe: false
  VersionAdded: '1.22'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/IoMethods
Security/JSONLoad:
  Description: |-
    Checks for the use of JSON class methods which have potential
    security issues.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/JSONLoad
  Enabled: true
  VersionAdded: '0.43'
  VersionChanged: '1.22'
  SafeAutoCorrect: false
Security/MarshalLoad:
  Description: |-
    Checks for the use of Marshal class methods which have
    potential security issues leading to remote code execution when
    loading from an untrusted source.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/MarshalLoad
  Enabled: true
  VersionAdded: '0.47'
Security/Open:
  Description: |-
    Checks for the use of `Kernel#open` and `URI.open` with dynamic
    data.
  Enabled: true
  VersionAdded: '0.53'
  VersionChanged: '1.0'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/Open
Security/YAMLLoad:
  Description: |-
    Checks for the use of YAML class methods which have
    potential security issues leading to remote code execution when
    loading from an untrusted source.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Security/YAMLLoad
  Enabled: true
  VersionAdded: '0.47'
  SafeAutoCorrect: false
Style/AccessModifierDeclarations:
  Description: |-
    Access modifiers should be declared to apply to a group of methods
    or inline before each method, depending on configuration.
    EnforcedStyle config covers only method definitions.
    Applications of visibility methods to symbols can be controlled
    using AllowModifiersOnSymbols config.
  Enabled: true
  VersionAdded: '0.57'
  VersionChanged: '0.81'
  EnforcedStyle: group
  SupportedStyles:
    - inline
    - group
  AllowModifiersOnSymbols: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/AccessModifierDeclarations
Style/AccessorGrouping:
  Description: |-
    Checks for grouping of accessors in `class` and `module` bodies.
    By default it enforces accessors to be placed in grouped declarations,
    but it can be configured to enforce separating them in multiple declarations.
  Enabled: true
  VersionAdded: '0.87'
  EnforcedStyle: grouped
  SupportedStyles:
    - separated
    - grouped
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/AccessorGrouping
Style/Alias:
  Description: |-
    Enforces the use of either `#alias` or `#alias_method`
    depending on configuration.
    It also flags uses of `alias :symbol` rather than `alias bareword`.
  StyleGuide: "#alias-method-lexically"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.36'
  EnforcedStyle: prefer_alias
  SupportedStyles:
    - prefer_alias
    - prefer_alias_method
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Alias
Style/AndOr:
  Description: |-
    Checks for uses of `and` and `or`, and suggests using `&&` and
    `||` instead. It can be configured to check only in conditions or in
    all contexts.
  StyleGuide: "#no-and-or-or"
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.9'
  VersionChanged: '1.21'
  EnforcedStyle: conditionals
  SupportedStyles:
    - always
    - conditionals
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/AndOr
Style/ArgumentsForwarding:
  Description: In Ruby 2.7, arguments forwarding has been added.
  StyleGuide: "#arguments-forwarding"
  Enabled: pending
  AllowOnlyRestArgument: true
  VersionAdded: '1.1'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ArgumentsForwarding
Style/ArrayCoercion:
  Description: Enforces the use of `Array()` instead of explicit `Array` check or
    `[*var]`.
  StyleGuide: "#array-coercion"
  Safe: false
  Enabled: false
  VersionAdded: '0.88'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ArrayCoercion
Style/ArrayJoin:
  Description: Checks for uses of "*" as a substitute for _join_.
  StyleGuide: "#array-join"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.31'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ArrayJoin
Style/AsciiComments:
  Description: |-
    Checks for non-ascii (non-English) characters
    in comments. You could set an array of allowed non-ascii chars in
    `AllowedChars` attribute (copyright notice "©" by default).
  StyleGuide: "#english-comments"
  Enabled: false
  VersionAdded: '0.9'
  VersionChanged: '1.21'
  AllowedChars:
    - "©"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/AsciiComments
Style/Attr:
  Description: Checks for uses of Module#attr.
  StyleGuide: "#attr"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Attr
Style/AutoResourceCleanup:
  Description: |-
    Checks for cases when you could use a block
    accepting version of a method that does automatic
    resource cleanup.
  Enabled: false
  VersionAdded: '0.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/AutoResourceCleanup
Style/BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  StyleGuide: "#percent-q-shorthand"
  Enabled: true
  VersionAdded: '0.25'
  EnforcedStyle: bare_percent
  SupportedStyles:
    - percent_q
    - bare_percent
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BarePercentLiterals
Style/BeginBlock:
  Description: This cop checks for BEGIN blocks.
  StyleGuide: "#no-BEGIN-blocks"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BeginBlock
Style/BisectedAttrAccessor:
  Description: |-
    Checks for places where `attr_reader` and `attr_writer`
    for the same method can be combined into single `attr_accessor`.
  Enabled: true
  VersionAdded: '0.87'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BisectedAttrAccessor
Style/BlockComments:
  Description: Looks for uses of block comments (=begin...=end).
  StyleGuide: "#no-block-comments"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.23'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BlockComments
Style/BlockDelimiters:
  Description: |-
    Check for uses of braces or do/end around single line or
    multi-line blocks.
  StyleGuide: "#single-line-blocks"
  Enabled: true
  VersionAdded: '0.30'
  VersionChanged: '0.35'
  EnforcedStyle: line_count_based
  SupportedStyles:
    - line_count_based
    - semantic
    - braces_for_chaining
    - always_braces
  ProceduralMethods:
    - benchmark
    - bm
    - bmbm
    - create
    - each_with_object
    - measure
    - new
    - realtime
    - tap
    - with_object
  FunctionalMethods:
    - let
    - let!
    - subject
    - watch
  IgnoredMethods:
    - lambda
    - proc
    - it
  AllowBracesOnProceduralOneLiners: false
  BracesRequiredMethods: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BlockDelimiters
Style/CaseEquality:
  Description: Checks for uses of the case equality operator(===).
  StyleGuide: "#no-case-equality"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.89'
  AllowOnConstant: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CaseEquality
Style/CaseLikeIf:
  Description: |-
    Identifies places where `if-elsif` constructions
    can be replaced with `case-when`.
  StyleGuide: "#case-vs-if-else"
  Enabled: true
  Safe: false
  VersionAdded: '0.88'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CaseLikeIf
Style/CharacterLiteral:
  Description: |-
    Checks for uses of the character literal ?x.
    Starting with Ruby 1.9 character literals are
    essentially one-character strings, so this syntax
    is mostly redundant at this point.
  StyleGuide: "#no-character-literals"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CharacterLiteral
Style/ClassAndModuleChildren:
  Description: |-
    Checks the style of children definitions at classes and
    modules. Basically there are two different styles:
  StyleGuide: "#namespace-definition"
  SafeAutoCorrect: false
  Enabled: true
  VersionAdded: '0.19'
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassAndModuleChildren
Style/ClassCheck:
  Description: Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  StyleGuide: "#is-a-vs-kind-of"
  Enabled: true
  VersionAdded: '0.24'
  EnforcedStyle: is_a?
  SupportedStyles:
    - is_a?
    - kind_of?
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassCheck
Style/ClassEqualityComparison:
  Description: |-
    Enforces the use of `Object#instance_of?` instead of class comparison
    for equality.
  StyleGuide: "#instance-of-vs-class-comparison"
  Enabled: true
  VersionAdded: '0.93'
  IgnoredMethods:
    - "=="
    - equal?
    - eql?
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassEqualityComparison
Style/ClassMethods:
  Description: |-
    Checks for uses of the class/module name instead of
    self, when defining class/module methods.
  StyleGuide: "#def-self-class-methods"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassMethods
Style/ClassMethodsDefinitions:
  Description: Enforces using `def self.method_name` or `class << self` to define
    class methods.
  StyleGuide: "#def-self-class-methods"
  Enabled: false
  VersionAdded: '0.89'
  EnforcedStyle: def_self
  SupportedStyles:
    - def_self
    - self_class
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassMethodsDefinitions
Style/ClassVars:
  Description: |-
    Checks for uses of class variables. Offenses
    are signaled only on assignment to class variables to
    reduce the number of offenses that would be reported.
  StyleGuide: "#no-class-vars"
  Enabled: true
  VersionAdded: '0.13'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ClassVars
Style/CollectionCompact:
  Description: |-
    Checks for places where custom logic on rejection nils from arrays
    and hashes can be replaced with `{Array,Hash}#{compact,compact!}`.
  Enabled: pending
  Safe: false
  VersionAdded: '1.2'
  VersionChanged: '1.3'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CollectionCompact
Style/CollectionMethods:
  Description: |-
    Enforces the use of consistent method names
    from the Enumerable module.
  StyleGuide: "#map-find-select-reduce-include-size"
  Enabled: false
  VersionAdded: '0.9'
  VersionChanged: '1.7'
  Safe: false
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: find
    find_all: select
    member?: include?
  MethodsAcceptingSymbol:
    - inject
    - reduce
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CollectionMethods
Style/ColonMethodCall:
  Description: |-
    Checks for methods invoked via the :: operator instead
    of the . operator (like FileUtils::rmdir instead of FileUtils.rmdir).
  StyleGuide: "#double-colons"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ColonMethodCall
Style/ColonMethodDefinition:
  Description: |-
    Checks for class methods that are defined using the `::`
    operator instead of the `.` operator.
  StyleGuide: "#colon-method-definition"
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ColonMethodDefinition
Style/CombinableLoops:
  Description: |-
    Checks for places where multiple consecutive loops over the same data
    can be combined into a single loop. It is very likely that combining them
    will make the code more efficient and more concise.
  Enabled: true
  Safe: false
  VersionAdded: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CombinableLoops
Style/CommandLiteral:
  Description: Enforces using `` or %x around command literals.
  StyleGuide: "#percent-x"
  Enabled: true
  VersionAdded: '0.30'
  EnforcedStyle: backticks
  SupportedStyles:
    - backticks
    - percent_x
    - mixed
  AllowInnerBackticks: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CommandLiteral
Style/CommentAnnotation:
  Description: |-
    Checks that comment annotation keywords are written according
    to guidelines.
  StyleGuide: "#annotate-keywords"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '1.20'
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK
    - REVIEW
    - NOTE
  RequireColon: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CommentAnnotation
Style/CommentedKeyword:
  Description: |-
    Checks for comments put on the same line as some keywords.
    These keywords are: `class`, `module`, `def`, `begin`, `end`.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.51'
  VersionChanged: '1.19'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/CommentedKeyword
Style/ConditionalAssignment:
  Description: |-
    Check for `if` and `case` statements where each branch is used for
    assignment to the same variable when using the return of the
    condition can be used instead.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.47'
  EnforcedStyle: assign_to_condition
  SupportedStyles:
    - assign_to_condition
    - assign_inside_condition
  SingleLineConditionsOnly: true
  IncludeTernaryExpressions: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ConditionalAssignment
Style/ConstantVisibility:
  Description: |-
    Checks that constants defined in classes and modules have
    an explicit visibility declaration. By default, Ruby makes all class-
    and module constants public, which litters the public API of the
    class or module. Explicitly declaring a visibility makes intent more
    clear, and prevents outside actors from touching private state.
  Enabled: false
  VersionAdded: '0.66'
  VersionChanged: '1.10'
  IgnoreModules: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ConstantVisibility
Style/Copyright:
  Description: Check that a copyright notice was given in each source file.
  Enabled: false
  VersionAdded: '0.30'
  Notice: "^Copyright (\\(c\\) )?2[0-9]{3} .+"
  AutocorrectNotice: ''
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Copyright
Style/DateTime:
  Description: |-
    Checks for consistent usage of the `DateTime` class over the
    `Time` class. This cop is disabled by default since these classes,
    although highly overlapping, have particularities that make them not
    replaceable in certain situations when dealing with multiple timezones
    and/or DST.
  StyleGuide: "#date--time"
  Enabled: false
  VersionAdded: '0.51'
  VersionChanged: '0.92'
  SafeAutoCorrect: false
  AllowCoercion: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DateTime
Style/DefWithParentheses:
  Description: |-
    Checks for parentheses in the definition of a method,
    that does not take any arguments. Both instance and
    class/singleton methods are checked.
  StyleGuide: "#method-parens"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DefWithParentheses
Style/Dir:
  Description: |-
    Checks for places where the `#__dir__` method can replace more
    complex constructs to retrieve a canonicalized absolute path to the
    current file.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Dir
Style/DisableCopsWithinSourceCodeDirective:
  Description: |-
    Detects comments to enable/disable RuboCop.
    This is useful if want to make sure that every RuboCop error gets fixed
    and not quickly disabled with a comment.
  Enabled: false
  VersionAdded: '0.82'
  VersionChanged: '1.9'
  AllowedCops: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DisableCopsWithinSourceCodeDirective
Style/DocumentDynamicEvalDefinition:
  Description: |-
    When using `class_eval` (or other `eval`) with string interpolation,
    add a comment block showing its appearance if interpolated (a practice used in Rails code).
  StyleGuide: "#eval-comment-docs"
  Enabled: pending
  VersionAdded: '1.1'
  VersionChanged: '1.3'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DocumentDynamicEvalDefinition
Style/Documentation:
  Description: |-
    Checks for missing top-level documentation of classes and
    modules. Classes with no body are exempt from the check and so are
    namespace modules - modules that have nothing in their bodies except
    classes, other modules, constant definitions or constant visibility
    declarations.
  Enabled: true
  VersionAdded: '0.9'
  AllowedConstants: []
  Exclude:
    - spec/**/*
    - test/**/*
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Documentation
Style/DocumentationMethod:
  Description: |-
    Checks for missing documentation comment for public methods.
    It can optionally be configured to also require documentation for
    non-public methods.
  Enabled: false
  VersionAdded: '0.43'
  Exclude:
    - spec/**/*
    - test/**/*
  RequireForNonPublicMethods: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DocumentationMethod
Style/DoubleCopDisableDirective:
  Description: |-
    Detects double disable comments on one line. This is mostly to catch
    automatically generated comments that need to be regenerated.
  Enabled: true
  VersionAdded: '0.73'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DoubleCopDisableDirective
Style/DoubleNegation:
  Description: Checks for uses of double negation (`!!`) to convert something to a
    boolean value.
  StyleGuide: "#no-bang-bang"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '1.2'
  EnforcedStyle: allowed_in_returns
  SafeAutoCorrect: false
  SupportedStyles:
    - allowed_in_returns
    - forbidden
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DoubleNegation
Style/EachForSimpleLoop:
  Description: |-
    Checks for loops which iterate a constant number of times,
    using a Range literal and `#each`. This can be done more readably using
    `Integer#times`.
  Enabled: true
  VersionAdded: '0.41'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EachForSimpleLoop
Style/EachWithObject:
  Description: |-
    Looks for inject / reduce calls where the passed in object is
    returned at the end and so could be replaced by each_with_object without
    the need to return the object at the end.
  Enabled: true
  VersionAdded: '0.22'
  VersionChanged: '0.42'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EachWithObject
Style/EmptyBlockParameter:
  Description: |-
    Checks for pipes for empty block parameters. Pipes for empty
    block parameters do not cause syntax errors, but they are redundant.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyBlockParameter
Style/EmptyCaseCondition:
  Description: Checks for case statements with an empty condition.
  Enabled: true
  VersionAdded: '0.40'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyCaseCondition
Style/EmptyElse:
  Description: |-
    Checks for empty else-clauses, possibly including comments and/or an
    explicit `nil` depending on the EnforcedStyle.
  Enabled: true
  VersionAdded: '0.28'
  VersionChanged: '0.32'
  EnforcedStyle: both
  SupportedStyles:
    - empty
    - nil
    - both
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyElse
Style/EmptyLambdaParameter:
  Description: |-
    Checks for parentheses for empty lambda parameters. Parentheses
    for empty lambda parameters do not cause syntax errors, but they are
    redundant.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyLambdaParameter
Style/EmptyLiteral:
  Description: |-
    Checks for the use of a method, the result of which
    would be a literal, like an empty array, hash, or string.
  StyleGuide: "#literal-array-hash"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.12'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyLiteral
Style/EmptyMethod:
  Description: |-
    Checks for the formatting of empty method definitions.
    By default it enforces empty method definitions to go on a single
    line (compact style), but it can be configured to enforce the `end`
    to go on its own line (expanded style).
  StyleGuide: "#no-single-line-methods"
  Enabled: true
  VersionAdded: '0.46'
  EnforcedStyle: compact
  SupportedStyles:
    - compact
    - expanded
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EmptyMethod
Style/Encoding:
  Description: Checks ensures source files have no utf-8 encoding comments.
  StyleGuide: "#utf-8"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Encoding
Style/EndBlock:
  Description: Checks for END blocks.
  StyleGuide: "#no-END-blocks"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.81'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EndBlock
Style/EndlessMethod:
  Description: Checks for endless methods.
  StyleGuide: "#endless-methods"
  Enabled: pending
  VersionAdded: '1.8'
  EnforcedStyle: allow_single_line
  SupportedStyles:
    - allow_single_line
    - allow_always
    - disallow
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EndlessMethod
Style/EnvHome:
  Description: |-
    Checks for consistent usage of `ENV['HOME']`. If `nil` is used as
    the second argument of `ENV.fetch`, it is treated as a bad case like `ENV[]`.
  Enabled: pending
  Safe: false
  VersionAdded: '1.29'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EnvHome
Style/EvalWithLocation:
  Description: |-
    Ensures that eval methods (`eval`, `instance_eval`, `class_eval`
    and `module_eval`) are given filename and line number values (`__FILE__`
    and `__LINE__`). This data is used to ensure that any errors raised
    within the evaluated code will be given the correct identification
    in a backtrace.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EvalWithLocation
Style/EvenOdd:
  Description: |-
    Checks for places where `Integer#even?` or `Integer#odd?`
    can be used.
  StyleGuide: "#predicate-methods"
  Enabled: true
  VersionAdded: '0.12'
  VersionChanged: '0.29'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/EvenOdd
Style/ExpandPathArguments:
  Description: |-
    Checks for use of the `File.expand_path` arguments.
    Likewise, it also checks for the `Pathname.new` argument.
  Enabled: true
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ExpandPathArguments
Style/ExplicitBlockArgument:
  Description: |-
    Enforces the use of explicit block argument to avoid writing
    block literal that just passes its arguments to another block.
  StyleGuide: "#block-argument"
  Enabled: true
  VersionAdded: '0.89'
  VersionChanged: '1.8'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ExplicitBlockArgument
Style/ExponentialNotation:
  Description: |-
    Enforces consistency when using exponential notation
    for numbers in the code (eg 1.2e4). Different styles are supported:
  StyleGuide: "#exponential-notation"
  Enabled: true
  VersionAdded: '0.82'
  EnforcedStyle: scientific
  SupportedStyles:
    - scientific
    - engineering
    - integral
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ExponentialNotation
Style/FetchEnvVar:
  Description: |-
    Suggests `ENV.fetch` for the replacement of `ENV[]`.
    `ENV[]` silently fails and returns `nil` when the environment variable is unset,
    which may cause unexpected behaviors when the developer forgets to set it.
    On the other hand, `ENV.fetch` raises KeyError or returns the explicitly
    specified default value.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FetchEnvVar
  Enabled: pending
  VersionAdded: '1.28'
  AllowedVars: []
Style/FileRead:
  Description: Favor `File.(bin)read` convenience methods.
  StyleGuide: "#file-read"
  Enabled: pending
  VersionAdded: '1.24'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FileRead
Style/FileWrite:
  Description: Favor `File.(bin)write` convenience methods.
  StyleGuide: "#file-write"
  Enabled: pending
  VersionAdded: '1.24'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FileWrite
Style/FloatDivision:
  Description: |-
    Checks for division with integers coerced to floats.
    It is recommended to either always use `fdiv` or coerce one side only.
    This cop also provides other options for code consistency.
  StyleGuide: "#float-division"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FloatDivision
  Enabled: true
  VersionAdded: '0.72'
  VersionChanged: '1.9'
  Safe: false
  EnforcedStyle: single_coerce
  SupportedStyles:
    - left_coerce
    - right_coerce
    - single_coerce
    - fdiv
Style/For:
  Description: |-
    Looks for uses of the `for` keyword or `each` method. The
    preferred alternative is set in the EnforcedStyle configuration
    parameter. An `each` call with a block on a single line is always
    allowed.
  StyleGuide: "#no-for-loops"
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.13'
  VersionChanged: '1.26'
  EnforcedStyle: each
  SupportedStyles:
    - each
    - for
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/For
Style/FormatString:
  Description: |-
    Enforces the use of a single string formatting utility.
    Valid options include Kernel#format, Kernel#sprintf and String#%.
  StyleGuide: "#sprintf"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.49'
  EnforcedStyle: format
  SupportedStyles:
    - format
    - sprintf
    - percent
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FormatString
Style/FormatStringToken:
  Description: Use a consistent style for named format string tokens.
  Enabled: true
  EnforcedStyle: annotated
  SupportedStyles:
    - annotated
    - template
    - unannotated
  MaxUnannotatedPlaceholdersAllowed: 1
  VersionAdded: '0.49'
  VersionChanged: '1.0'
  IgnoredMethods: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FormatStringToken
Style/FrozenStringLiteralComment:
  Description: |-
    Helps you transition from mutable string literals
    to frozen string literals.
    It will add the `# frozen_string_literal: true` magic comment to the top
    of files to enable frozen string literals. Frozen string literals may be
    default in future Ruby. The comment will be added below a shebang and
    encoding comment. The frozen string literal comment is only valid in Ruby 2.3+.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.79'
  EnforcedStyle: always
  SupportedStyles:
    - always
    - always_true
    - never
  SafeAutoCorrect: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FrozenStringLiteralComment
Style/GlobalStdStream:
  Description: |-
    Enforces the use of `$stdout/$stderr/$stdin` instead of `STDOUT/STDERR/STDIN`.
    `STDOUT/STDERR/STDIN` are constants, and while you can actually
    reassign (possibly to redirect some stream) constants in Ruby, you'll get
    an interpreter warning if you do so.
  StyleGuide: "#global-stdout"
  Enabled: true
  VersionAdded: '0.89'
  SafeAutoCorrect: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/GlobalStdStream
Style/GlobalVars:
  Description: |-
    Looks for uses of global variables.
    It does not report offenses for built-in global variables.
    Built-in global variables are allowed by default. Additionally
    users can allow additional variables via the AllowedVariables option.
  StyleGuide: "#instance-vars"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/GlobalVars
  Enabled: true
  VersionAdded: '0.13'
  AllowedVariables: []
Style/GuardClause:
  Description: |-
    Use a guard clause instead of wrapping the code inside a conditional
    expression
  StyleGuide: "#no-nested-conditionals"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '1.28'
  MinBodyLength: 1
  AllowConsecutiveConditionals: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/GuardClause
Style/HashAsLastArrayItem:
  Description: |-
    Checks for presence or absence of braces around hash literal as a last
    array item depending on configuration.
  StyleGuide: "#hash-literal-as-last-array-item"
  Enabled: true
  VersionAdded: '0.88'
  EnforcedStyle: braces
  SupportedStyles:
    - braces
    - no_braces
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashAsLastArrayItem
Style/HashConversion:
  Description: |-
    Checks the usage of pre-2.1 `Hash[args]` method of converting enumerables and
    sequences of values to hashes.
  StyleGuide: "#avoid-hash-constructor"
  Enabled: pending
  VersionAdded: '1.10'
  VersionChanged: '1.11'
  AllowSplatArgument: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashConversion
Style/HashEachMethods:
  Description: Checks for uses of `each_key` and `each_value` Hash methods.
  StyleGuide: "#hash-each"
  Enabled: true
  Safe: false
  VersionAdded: '0.80'
  VersionChanged: '1.16'
  AllowedReceivers: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashEachMethods
Style/HashExcept:
  Description: |-
    Checks for usages of `Hash#reject`, `Hash#select`, and `Hash#filter` methods
    that can be replaced with `Hash#except` method.
  Enabled: pending
  VersionAdded: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashExcept
Style/HashLikeCase:
  Description: |-
    Checks for places where `case-when` represents a simple 1:1
    mapping and can be replaced with a hash lookup.
  Enabled: true
  VersionAdded: '0.88'
  MinBranchesCount: 3
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashLikeCase
Style/HashSyntax:
  Description: Checks hash literal syntax.
  StyleGuide: "#hash-literals"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '1.24'
  EnforcedStyle: ruby19
  SupportedStyles:
    - ruby19
    - hash_rockets
    - no_mixed_keys
    - ruby19_no_mixed_keys
  EnforcedShorthandSyntax: always
  SupportedShorthandSyntax:
    - always
    - never
    - either
  UseHashRocketsWithSymbolValues: false
  PreferHashRocketsForNonAlnumEndingSymbols: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashSyntax
Style/HashTransformKeys:
  Description: |-
    Looks for uses of `_.each_with_object({}) {...}`,
    `_.map {...}.to_h`, and `Hash[_.map {...}]` that are actually just
    transforming the keys of a hash, and tries to use a simpler & faster
    call to `transform_keys` instead.
    It should only be enabled on Ruby version 2.5 or newer.
    (`transform_keys` was added in Ruby 2.5.)
  Enabled: true
  VersionAdded: '0.80'
  VersionChanged: '0.90'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformKeys
Style/HashTransformValues:
  Description: |-
    Looks for uses of `_.each_with_object({}) {...}`,
    `_.map {...}.to_h`, and `Hash[_.map {...}]` that are actually just
    transforming the values of a hash, and tries to use a simpler & faster
    call to `transform_values` instead.
  Enabled: true
  VersionAdded: '0.80'
  VersionChanged: '0.90'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformValues
Style/IdenticalConditionalBranches:
  Description: |-
    Checks for identical expressions at the beginning or end of
    each branch of a conditional expression. Such expressions should normally
    be placed outside the conditional expression - before or after it.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.36'
  VersionChanged: '1.19'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IdenticalConditionalBranches
Style/IfInsideElse:
  Description: |-
    If the `else` branch of a conditional consists solely of an `if` node,
    it can be combined with the `else` to become an `elsif`.
    This helps to keep the nesting level from getting too deep.
  Enabled: true
  AllowIfModifier: false
  VersionAdded: '0.36'
  VersionChanged: '1.3'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IfInsideElse
Style/IfUnlessModifier:
  Description: |-
    Checks for `if` and `unless` statements that would fit on one line if
    written as modifier `if`/`unless`. The cop also checks for modifier
    `if`/`unless` lines that exceed the maximum line length.
  StyleGuide: "#if-as-a-modifier"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IfUnlessModifier
Style/IfUnlessModifierOfIfUnless:
  Description: |-
    Checks for if and unless statements used as modifiers of other if or
    unless statements.
  Enabled: true
  VersionAdded: '0.39'
  VersionChanged: '0.87'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IfUnlessModifierOfIfUnless
Style/IfWithBooleanLiteralBranches:
  Description: |-
    Checks for redundant `if` with boolean literal branches.
    It checks only conditions to return boolean value (`true` or `false`) for safe detection.
    The conditions to be checked are comparison methods, predicate methods, and double negative.
  Enabled: pending
  VersionAdded: '1.9'
  SafeAutoCorrect: false
  AllowedMethods:
    - nonzero?
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IfWithBooleanLiteralBranches
Style/IfWithSemicolon:
  Description: Checks for uses of semicolon in if statements.
  StyleGuide: "#no-semicolon-ifs"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IfWithSemicolon
Style/ImplicitRuntimeError:
  Description: |-
    Checks for `raise` or `fail` statements which do not specify an
    explicit exception class. (This raises a `RuntimeError`. Some projects
    might prefer to use exception classes which more precisely identify the
    nature of the error.)
  Enabled: false
  VersionAdded: '0.41'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ImplicitRuntimeError
Style/InPatternThen:
  Description: Checks for `in;` uses in `case` expressions.
  StyleGuide: "#no-in-pattern-semicolons"
  Enabled: pending
  VersionAdded: '1.16'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/InPatternThen
Style/InfiniteLoop:
  Description: Use `Kernel#loop` for infinite loops.
  Safe: false
  StyleGuide: "#infinite-loop"
  Enabled: true
  VersionAdded: '0.26'
  VersionChanged: '0.61'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/InfiniteLoop
Style/InlineComment:
  Description: Checks for trailing inline comments.
  Enabled: false
  VersionAdded: '0.23'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/InlineComment
Style/InverseMethods:
  Description: |-
    Check for usages of not (`not` or `!`) called on a method
    when an inverse of that method can be used instead.
  Enabled: true
  Safe: false
  VersionAdded: '0.48'
  InverseMethods:
    :any?: :none?
    :even?: :odd?
    :==: :!=
    :=~: :!~
    :<: :>=
    :>: :<=
  InverseBlocks:
    :select: :reject
    :select!: :reject!
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/InverseMethods
Style/IpAddresses:
  Description: |-
    Checks for hardcoded IP addresses, which can make code
    brittle. IP addresses are likely to need to be changed when code
    is deployed to a different server or environment, which may break
    a deployment if forgotten. Prefer setting IP addresses in ENV or
    other configuration.
  Enabled: false
  VersionAdded: '0.58'
  VersionChanged: '0.91'
  AllowedAddresses:
    - "::"
  Exclude:
    - "**/*.gemfile"
    - "**/Gemfile"
    - "**/gems.rb"
    - "**/*.gemspec"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/IpAddresses
Style/KeywordParametersOrder:
  Description: |-
    Enforces that optional keyword parameters are placed at the
    end of the parameters list.
  StyleGuide: "#keyword-parameters-order"
  Enabled: true
  VersionAdded: '0.90'
  VersionChanged: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/KeywordParametersOrder
Style/Lambda:
  Description: |-
    (by default) checks for uses of the lambda literal syntax for
    single line lambdas, and the method call syntax for multiline lambdas.
    It is configurable to enforce one of the styles for both single line
    and multiline lambdas as well.
  StyleGuide: "#lambda-multi-line"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.40'
  EnforcedStyle: line_count_dependent
  SupportedStyles:
    - line_count_dependent
    - lambda
    - literal
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Lambda
Style/LambdaCall:
  Description: Checks for use of the lambda.(args) syntax.
  StyleGuide: "#proc-call"
  Enabled: true
  VersionAdded: '0.13'
  VersionChanged: '0.14'
  EnforcedStyle: call
  SupportedStyles:
    - call
    - braces
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/LambdaCall
Style/LineEndConcatenation:
  Description: |-
    Checks for string literal concatenation at
    the end of a line.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.18'
  VersionChanged: '0.64'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/LineEndConcatenation
Style/MapCompactWithConditionalBlock:
  Description: Prefer `select` or `reject` over `map { ... }.compact`.
  Enabled: pending
  VersionAdded: '1.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MapCompactWithConditionalBlock
Style/MapToHash:
  Description: |-
    Looks for uses of `map.to_h` or `collect.to_h` that could be
    written with just `to_h` in Ruby >= 2.6.
  Enabled: pending
  VersionAdded: '1.24'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MapToHash
Style/MethodCallWithArgsParentheses:
  Description: |-
    Enforces the presence (default) or absence of parentheses in
    method calls containing parameters.
  StyleGuide: "#method-invocation-parens"
  Enabled: false
  VersionAdded: '0.47'
  VersionChanged: '1.7'
  IgnoreMacros: true
  IgnoredMethods: []
  AllowedPatterns: []
  IgnoredPatterns: []
  IncludedMacros: []
  AllowParenthesesInMultilineCall: false
  AllowParenthesesInChaining: false
  AllowParenthesesInCamelCaseMethod: false
  AllowParenthesesInStringInterpolation: false
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - omit_parentheses
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MethodCallWithArgsParentheses
Style/MethodCallWithoutArgsParentheses:
  Description: Checks for unwanted parentheses in parameterless method calls.
  StyleGuide: "#method-invocation-parens"
  Enabled: true
  IgnoredMethods: []
  VersionAdded: '0.47'
  VersionChanged: '0.55'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MethodCallWithoutArgsParentheses
Style/MethodCalledOnDoEndBlock:
  Description: |-
    Checks for methods called on a do...end block. The point of
    this check is that it's easy to miss the call tacked on to the block
    when reading code.
  StyleGuide: "#single-line-blocks"
  Enabled: false
  VersionAdded: '0.14'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MethodCalledOnDoEndBlock
Style/MethodDefParentheses:
  Description: |-
    Checks for parentheses around the arguments in method
    definitions. Both instance and class/singleton methods are checked.
  StyleGuide: "#method-parens"
  Enabled: true
  VersionAdded: '0.16'
  VersionChanged: '1.7'
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses
    - require_no_parentheses_except_multiline
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MethodDefParentheses
Style/MinMax:
  Description: Checks for potential uses of `Enumerable#minmax`.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MinMax
Style/MissingElse:
  Description: Checks for `if` expressions that do not have an `else` branch.
  Enabled: false
  VersionAdded: '0.30'
  VersionChanged: '0.38'
  EnforcedStyle: both
  SupportedStyles:
    - if
    - case
    - both
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MissingElse
Style/MissingRespondToMissing:
  Description: |-
    Checks for the presence of `method_missing` without also
    defining `respond_to_missing?`.
  StyleGuide: "#no-method-missing"
  Enabled: true
  VersionAdded: '0.56'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MissingRespondToMissing
Style/MixinGrouping:
  Description: |-
    Checks for grouping of mixins in `class` and `module` bodies.
    By default it enforces mixins to be placed in separate declarations,
    but it can be configured to enforce grouping them in one declaration.
  StyleGuide: "#mixin-grouping"
  Enabled: true
  VersionAdded: '0.48'
  VersionChanged: '0.49'
  EnforcedStyle: separated
  SupportedStyles:
    - separated
    - grouped
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MixinGrouping
Style/MixinUsage:
  Description: |-
    Checks that `include`, `extend` and `prepend` statements appear
    inside classes and modules, not at the top level, so as to not affect
    the behavior of `Object`.
  Enabled: true
  VersionAdded: '0.51'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MixinUsage
Style/ModuleFunction:
  Description: |-
    Checks for use of `extend self` or `module_function` in a
    module.
  StyleGuide: "#module-function"
  Enabled: true
  VersionAdded: '0.11'
  VersionChanged: '0.65'
  EnforcedStyle: module_function
  SupportedStyles:
    - module_function
    - extend_self
    - forbidden
  Autocorrect: false
  SafeAutoCorrect: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ModuleFunction
Style/MultilineBlockChain:
  Description: |-
    Checks for chaining of a block after another block that spans
    multiple lines.
  StyleGuide: "#single-line-blocks"
  Enabled: true
  VersionAdded: '0.13'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineBlockChain
Style/MultilineIfModifier:
  Description: Checks for uses of if/unless modifiers with multiple-lines bodies.
  StyleGuide: "#no-multiline-if-modifiers"
  Enabled: true
  VersionAdded: '0.45'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineIfModifier
Style/MultilineIfThen:
  Description: Checks for uses of the `then` keyword in multi-line if statements.
  StyleGuide: "#no-then"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.26'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineIfThen
Style/MultilineInPatternThen:
  Description: Checks uses of the `then` keyword in multi-line `in` statement.
  StyleGuide: "#no-then"
  Enabled: pending
  VersionAdded: '1.16'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineInPatternThen
Style/MultilineMemoization:
  Description: Checks expressions wrapping styles for multiline memoization.
  Enabled: true
  VersionAdded: '0.44'
  VersionChanged: '0.48'
  EnforcedStyle: keyword
  SupportedStyles:
    - keyword
    - braces
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineMemoization
Style/MultilineMethodSignature:
  Description: Checks for method signatures that span multiple lines.
  Enabled: false
  VersionAdded: '0.59'
  VersionChanged: '1.7'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineMethodSignature
Style/MultilineTernaryOperator:
  Description: Checks for multi-line ternary op expressions.
  StyleGuide: "#no-multiline-ternary"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.86'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineTernaryOperator
Style/MultilineWhenThen:
  Description: |-
    Checks uses of the `then` keyword
    in multi-line when statements.
  StyleGuide: "#no-then"
  Enabled: true
  VersionAdded: '0.73'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultilineWhenThen
Style/MultipleComparison:
  Description: |-
    Checks against comparing a variable with multiple items, where
    `Array#include?`, `Set#include?` or a `case` could be used instead
    to avoid code repetition.
    It accepts comparisons of multiple method calls to avoid unnecessary method calls
    by default. It can be configured by `AllowMethodComparison` option.
  Enabled: true
  VersionAdded: '0.49'
  VersionChanged: '1.1'
  AllowMethodComparison: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MultipleComparison
Style/MutableConstant:
  Description: |-
    Checks whether some constant value isn't a
    mutable literal (e.g. array or hash).
  Enabled: true
  VersionAdded: '0.34'
  VersionChanged: '1.8'
  SafeAutoCorrect: false
  EnforcedStyle: literals
  SupportedStyles:
    - literals
    - strict
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MutableConstant
Style/NegatedIf:
  Description: |-
    Checks for uses of if with a negated condition. Only ifs
    without else are considered. There are three different styles:
  StyleGuide: "#unless-for-negatives"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.48'
  EnforcedStyle: both
  SupportedStyles:
    - both
    - prefix
    - postfix
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NegatedIf
Style/NegatedIfElseCondition:
  Description: |-
    Checks for uses of `if-else` and ternary operators with a negated condition
    which can be simplified by inverting condition and swapping branches.
  Enabled: pending
  VersionAdded: '1.2'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NegatedIfElseCondition
Style/NegatedUnless:
  Description: |-
    Checks for uses of unless with a negated condition. Only unless
    without else are considered. There are three different styles:
  StyleGuide: "#if-for-negatives"
  Enabled: true
  VersionAdded: '0.69'
  EnforcedStyle: both
  SupportedStyles:
    - both
    - prefix
    - postfix
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NegatedUnless
Style/NegatedWhile:
  Description: Checks for uses of while with a negated condition.
  StyleGuide: "#until-for-negatives"
  Enabled: true
  VersionAdded: '0.20'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NegatedWhile
Style/NestedFileDirname:
  Description: |-
    Checks for nested `File.dirname`.
    It replaces nested `File.dirname` with the level argument introduced in Ruby 3.1.
  Enabled: pending
  VersionAdded: '1.26'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NestedFileDirname
Style/NestedModifier:
  Description: |-
    Checks for nested use of if, unless, while and until in their
    modifier form.
  StyleGuide: "#no-nested-modifiers"
  Enabled: true
  VersionAdded: '0.35'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NestedModifier
Style/NestedParenthesizedCalls:
  Description: |-
    Checks for unparenthesized method calls in the argument list
    of a parenthesized method call.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.77'
  AllowedMethods:
    - be
    - be_a
    - be_an
    - be_between
    - be_falsey
    - be_kind_of
    - be_instance_of
    - be_truthy
    - be_within
    - eq
    - eql
    - end_with
    - include
    - match
    - raise_error
    - respond_to
    - start_with
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NestedParenthesizedCalls
Style/NestedTernaryOperator:
  Description: Checks for nested ternary op expressions.
  StyleGuide: "#no-nested-ternary"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.86'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NestedTernaryOperator
Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: "#no-nested-conditionals"
  Enabled: true
  VersionAdded: '0.22'
  VersionChanged: '0.35'
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
    - skip_modifier_ifs
    - always
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Next
Style/NilComparison:
  Description: |-
    Checks for comparison of something with nil using `==` and
    `nil?`.
  StyleGuide: "#predicate-methods"
  Enabled: true
  VersionAdded: '0.12'
  VersionChanged: '0.59'
  EnforcedStyle: predicate
  SupportedStyles:
    - predicate
    - comparison
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NilComparison
Style/NilLambda:
  Description: |-
    Checks for lambdas and procs that always return nil,
    which can be replaced with an empty lambda or proc instead.
  Enabled: pending
  VersionAdded: '1.3'
  VersionChanged: '1.15'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NilLambda
Style/NonNilCheck:
  Description: Checks for non-nil checks, which are usually redundant.
  StyleGuide: "#no-non-nil-checks"
  Enabled: true
  VersionAdded: '0.20'
  VersionChanged: '0.22'
  IncludeSemanticChanges: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NonNilCheck
Style/Not:
  Description: Checks for uses of the keyword `not` instead of `!`.
  StyleGuide: "#bang-not-not"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Not
Style/NumberedParameters:
  Description: Checks for numbered parameters.
  Enabled: pending
  VersionAdded: '1.22'
  EnforcedStyle: allow_single_line
  SupportedStyles:
    - allow_single_line
    - disallow
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumberedParameters
Style/NumberedParametersLimit:
  Description: |-
    Detects use of an excessive amount of numbered parameters in a
    single block. Having too many numbered parameters can make code too
    cryptic and hard to read.
  Enabled: pending
  VersionAdded: '1.22'
  Max: 1
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumberedParametersLimit
Style/NumericLiteralPrefix:
  Description: |-
    Checks for octal, hex, binary, and decimal literals using
    uppercase prefixes and corrects them to lowercase prefix
    or no prefix (in case of decimals).
  StyleGuide: "#numeric-literal-prefixes"
  Enabled: true
  VersionAdded: '0.41'
  EnforcedOctalStyle: zero_with_o
  SupportedOctalStyles:
    - zero_with_o
    - zero_only
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumericLiteralPrefix
Style/NumericLiterals:
  Description: |-
    Checks for big numeric literals without _ between groups
    of digits in them.
  StyleGuide: "#underscores-in-numerics"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.48'
  MinDigits: 5
  Strict: false
  AllowedNumbers: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumericLiterals
Style/NumericPredicate:
  Description: |-
    Checks for usage of comparison operators (`==`,
    `>`, `<`) to test numbers as zero, positive, or negative.
    These can be replaced by their respective predicate methods.
    The cop can also be configured to do the reverse.
  StyleGuide: "#predicate-methods"
  Safe: false
  SafeAutoCorrect: false
  Enabled: true
  VersionAdded: '0.42'
  VersionChanged: '0.59'
  EnforcedStyle: predicate
  SupportedStyles:
    - predicate
    - comparison
  IgnoredMethods: []
  Exclude:
    - spec/**/*
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumericPredicate
Style/ObjectThen:
  Description: |-
    Enforces the use of consistent method names
    `Object#yield_self` or `Object#then`.
  StyleGuide: "#object-yield-self-vs-object-then"
  Enabled: pending
  VersionAdded: '1.28'
  EnforcedStyle: then
  SupportedStyles:
    - then
    - yield_self
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ObjectThen
Style/OneLineConditional:
  Description: |-
    Checks for uses of if/then/else/end constructs on a single line.
    AlwaysCorrectToMultiline config option can be set to true to auto-convert all offenses to
    multi-line constructs. When AlwaysCorrectToMultiline is false (default case) the
    autocorrect will first try converting them to ternary operators.
  StyleGuide: "#ternary-operator"
  Enabled: true
  AlwaysCorrectToMultiline: false
  VersionAdded: '0.9'
  VersionChanged: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OneLineConditional
Style/OpenStructUse:
  Description: |-
    Flags uses of OpenStruct, as it is now officially discouraged
    to be used for performance, version compatibility, and potential security issues.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OpenStructUse
  Enabled: pending
  VersionAdded: '1.23'
Style/OptionHash:
  Description: |-
    Checks for options hashes and discourages them if the
    current Ruby version supports keyword arguments.
  Enabled: false
  VersionAdded: '0.33'
  VersionChanged: '0.34'
  SuspiciousParamNames:
    - options
    - opts
    - args
    - params
    - parameters
  Allowlist: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OptionHash
Style/OptionalArguments:
  Description: |-
    Checks for optional arguments to methods
    that do not come at the end of the argument list.
  StyleGuide: "#optional-arguments"
  Enabled: true
  Safe: false
  VersionAdded: '0.33'
  VersionChanged: '0.83'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OptionalArguments
Style/OptionalBooleanParameter:
  Description: |-
    Checks for places where keyword arguments can be used instead of
    boolean arguments when defining methods. `respond_to_missing?` method is allowed by default.
    These are customizable with `AllowedMethods` option.
  StyleGuide: "#boolean-keyword-arguments"
  Enabled: true
  Safe: false
  VersionAdded: '0.89'
  AllowedMethods:
    - respond_to_missing?
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OptionalBooleanParameter
Style/OrAssignment:
  Description: Checks for potential usage of the `||=` operator.
  StyleGuide: "#double-pipe-for-uninit"
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/OrAssignment
Style/ParallelAssignment:
  Description: |-
    Checks for simple usages of parallel assignment.
    This will only complain when the number of variables
    being assigned matched the number of assigning variables.
  StyleGuide: "#parallel-assignment"
  Enabled: true
  VersionAdded: '0.32'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ParallelAssignment
Style/ParenthesesAroundCondition:
  Description: |-
    Checks for the presence of superfluous parentheses around the
    condition of if/unless/while/until.
  StyleGuide: "#no-parens-around-condition"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.56'
  AllowSafeAssignment: true
  AllowInMultilineConditions: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ParenthesesAroundCondition
Style/PercentLiteralDelimiters:
  Description: Enforces the consistent usage of `%`-literal delimiters.
  StyleGuide: "#percent-literal-braces"
  Enabled: true
  VersionAdded: '0.19'
  PreferredDelimiters:
    default: "()"
    "%i": "[]"
    "%I": "[]"
    "%r": "{}"
    "%w": "[]"
    "%W": "[]"
  VersionChanged: '0.48'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PercentLiteralDelimiters
Style/PercentQLiterals:
  Description: Checks for usage of the %Q() syntax when %q() would do.
  Enabled: true
  VersionAdded: '0.25'
  EnforcedStyle: lower_case_q
  SupportedStyles:
    - lower_case_q
    - upper_case_q
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PercentQLiterals
Style/PerlBackrefs:
  Description: |-
    Looks for uses of Perl-style regexp match
    backreferences and their English versions like
    $1, $2, $&, &+, $MATCH, $PREMATCH, etc.
  StyleGuide: "#no-perl-regexp-last-matchers"
  Enabled: true
  VersionAdded: '0.13'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PerlBackrefs
Style/PreferredHashMethods:
  Description: |-
    Checks for uses of methods `Hash#has_key?` and
    `Hash#has_value?`, and suggests using `Hash#key?` and `Hash#value?` instead.
  StyleGuide: "#hash-key"
  Enabled: true
  Safe: false
  VersionAdded: '0.41'
  VersionChanged: '0.70'
  EnforcedStyle: short
  SupportedStyles:
    - short
    - verbose
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PreferredHashMethods
Style/Proc:
  Description: |-
    Checks for uses of Proc.new where Kernel#proc
    would be more appropriate.
  StyleGuide: "#proc"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.18'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Proc
Style/QuotedSymbols:
  Description: |-
    Checks if the quotes used for quoted symbols match the configured defaults.
    By default uses the same configuration as `Style/StringLiterals`; if that
    cop is not enabled, the default `EnforcedStyle` is `single_quotes`.
  Enabled: pending
  VersionAdded: '1.16'
  EnforcedStyle: same_as_string_literals
  SupportedStyles:
    - same_as_string_literals
    - single_quotes
    - double_quotes
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/QuotedSymbols
Style/RaiseArgs:
  Description: |-
    Checks the args passed to `fail` and `raise`. For exploded
    style (default), it recommends passing the exception class and message
    to `raise`, rather than construct an instance of the error. It will
    still allow passing just a message, or the construction of an error
    with more than one argument.
  StyleGuide: "#exception-class-messages"
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '1.2'
  EnforcedStyle: exploded
  SupportedStyles:
    - compact
    - exploded
  AllowedCompactTypes: []
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RaiseArgs
Style/RandomWithOffset:
  Description: |-
    Checks for the use of randomly generated numbers,
    added/subtracted with integer literals, as well as those with
    Integer#succ and Integer#pred methods. Prefer using ranges instead,
    as it clearly states the intentions.
  StyleGuide: "#random-numbers"
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RandomWithOffset
Style/RedundantArgument:
  Description: Checks for a redundant argument passed to certain methods.
  Enabled: pending
  Safe: false
  VersionAdded: '1.4'
  VersionChanged: '1.7'
  Methods:
    join: ''
    split: " "
    chomp: "\n"
    chomp!: "\n"
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantArgument
Style/RedundantAssignment:
  Description: Checks for redundant assignment before returning.
  Enabled: true
  VersionAdded: '0.87'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantAssignment
Style/RedundantBegin:
  Description: Checks for redundant `begin` blocks.
  StyleGuide: "#begin-implicit"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.21'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantBegin
Style/RedundantCapitalW:
  Description: Checks for usage of the %W() syntax when %w() would do.
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantCapitalW
Style/RedundantCondition:
  Description: Checks for unnecessary conditional expressions.
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantCondition
Style/RedundantConditional:
  Description: Checks for redundant returning of true/false in conditionals.
  Enabled: true
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantConditional
Style/RedundantException:
  Description: Checks for RuntimeError as the argument of raise/fail.
  StyleGuide: "#no-explicit-runtimeerror"
  Enabled: true
  VersionAdded: '0.14'
  VersionChanged: '0.29'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantException
Style/RedundantFetchBlock:
  Description: |-
    Identifies places where `fetch(key) { value }`
    can be replaced by `fetch(key, value)`.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantFetchBlock
  Enabled: true
  Safe: false
  SafeForConstants: false
  VersionAdded: '0.86'
Style/RedundantFileExtensionInRequire:
  Description: |-
    Checks for the presence of superfluous `.rb` extension in
    the filename provided to `require` and `require_relative`.
  StyleGuide: "#no-explicit-rb-to-require"
  Enabled: true
  VersionAdded: '0.88'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantFileExtensionInRequire
Style/RedundantFreeze:
  Description: Check for uses of `Object#freeze` on immutable objects.
  Enabled: true
  VersionAdded: '0.34'
  VersionChanged: '0.66'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantFreeze
Style/RedundantInitialize:
  Description: Checks for `initialize` methods that are redundant.
  Enabled: pending
  Safe: false
  AllowComments: true
  VersionAdded: '1.27'
  VersionChanged: '1.28'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantInitialize
Style/RedundantInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.76'
  VersionChanged: '1.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantInterpolation
Style/RedundantParentheses:
  Description: Checks for redundant parentheses.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantParentheses
Style/RedundantPercentQ:
  Description: Checks for usage of the %q/%Q syntax when '' or "" would do.
  StyleGuide: "#percent-q"
  Enabled: true
  VersionAdded: '0.76'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantPercentQ
Style/RedundantRegexpCharacterClass:
  Description: Checks for unnecessary single-element Regexp character classes.
  Enabled: true
  VersionAdded: '0.85'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantRegexpCharacterClass
Style/RedundantRegexpEscape:
  Description: Checks for redundant escapes inside Regexp literals.
  Enabled: true
  VersionAdded: '0.85'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantRegexpEscape
Style/RedundantReturn:
  Description: Checks for redundant `return` expressions.
  StyleGuide: "#no-explicit-return"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.14'
  AllowMultipleReturnValues: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantReturn
Style/RedundantSelf:
  Description: Checks for redundant uses of `self`.
  StyleGuide: "#no-self-unless-required"
  Enabled: true
  VersionAdded: '0.10'
  VersionChanged: '0.13'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantSelf
Style/RedundantSelfAssignment:
  Description: |-
    Checks for places where redundant assignments are made for in place
    modification methods.
  Enabled: true
  Safe: false
  VersionAdded: '0.90'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantSelfAssignment
Style/RedundantSelfAssignmentBranch:
  Description: Checks for places where conditional branch makes redundant self-assignment.
  Enabled: pending
  VersionAdded: '1.19'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantSelfAssignmentBranch
Style/RedundantSort:
  Description: |-
    Identifies instances of sorting and then
    taking only the first or last element. The same behavior can
    be accomplished without a relatively expensive sort by using
    `Enumerable#min` instead of sorting and taking the first
    element and `Enumerable#max` instead of sorting and taking the
    last element. Similarly, `Enumerable#min_by` and
    `Enumerable#max_by` can replace `Enumerable#sort_by` calls
    after which only the first or last element is used.
  Enabled: true
  VersionAdded: '0.76'
  VersionChanged: '1.22'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantSort
Style/RedundantSortBy:
  Description: |-
    Identifies places where `sort_by { ... }` can be replaced by
    `sort`.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RedundantSortBy
Style/RegexpLiteral:
  Description: Enforces using // or %r around regular expressions.
  StyleGuide: "#percent-r"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'
  EnforcedStyle: slashes
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  AllowInnerSlashes: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RegexpLiteral
Style/RescueModifier:
  Description: Checks for uses of rescue in its modifier form.
  StyleGuide: "#no-rescue-modifiers"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.34'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RescueModifier
Style/RescueStandardError:
  Description: |-
    Checks for rescuing `StandardError`. There are two supported
    styles `implicit` and `explicit`. This cop will not register an offense
    if any error other than `StandardError` is specified.
  Enabled: true
  VersionAdded: '0.52'
  EnforcedStyle: explicit
  SupportedStyles:
    - implicit
    - explicit
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/RescueStandardError
Style/ReturnNil:
  Description: Enforces consistency between 'return nil' and 'return'.
  Enabled: false
  EnforcedStyle: return
  SupportedStyles:
    - return
    - return_nil
  VersionAdded: '0.50'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ReturnNil
Style/SafeNavigation:
  Description: |-
    Transforms usages of a method call safeguarded by a non `nil`
    check for the variable whose method is being called to
    safe navigation (`&.`). If there is a method chain, all of the methods
    in the chain need to be checked for safety, and all of the methods will
    need to be changed to use safe navigation.
  Enabled: true
  VersionAdded: '0.43'
  VersionChanged: '1.27'
  ConvertCodeThatCanStartToReturnNil: false
  AllowedMethods:
    - present?
    - blank?
    - presence
    - try
    - try!
  SafeAutoCorrect: false
  MaxChainLength: 2
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SafeNavigation
Style/Sample:
  Description: |-
    Identifies usages of `shuffle.first`,
    `shuffle.last`, and `shuffle[]` and change them to use
    `sample` instead.
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Sample
  Enabled: true
  VersionAdded: '0.30'
Style/SelectByRegexp:
  Description: |-
    Looks for places where an subset of an Enumerable (array,
    range, set, etc.; see note below) is calculated based on a `Regexp`
    match, and suggests `grep` or `grep_v` instead.
  Enabled: pending
  SafeAutoCorrect: false
  VersionAdded: '1.22'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SelectByRegexp
Style/SelfAssignment:
  Description: Enforces the use the shorthand for self-assignment.
  StyleGuide: "#self-assignment"
  Enabled: true
  VersionAdded: '0.19'
  VersionChanged: '0.29'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SelfAssignment
Style/Semicolon:
  Description: |-
    Checks for multiple expressions placed on the same line.
    It also checks for lines terminated with a semicolon.
  StyleGuide: "#no-semicolon"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.19'
  AllowAsExpressionSeparator: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Semicolon
Style/Send:
  Description: Checks for the use of the send method.
  StyleGuide: "#prefer-public-send"
  Enabled: false
  VersionAdded: '0.33'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Send
Style/SignalException:
  Description: Checks for uses of `fail` and `raise`.
  StyleGuide: "#prefer-raise-over-fail"
  Enabled: true
  VersionAdded: '0.11'
  VersionChanged: '0.37'
  EnforcedStyle: only_raise
  SupportedStyles:
    - only_raise
    - only_fail
    - semantic
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SignalException
Style/SingleArgumentDig:
  Description: |-
    Sometimes using dig method ends up with just a single
    argument. In such cases, dig should be replaced with [].
  Enabled: true
  VersionAdded: '0.89'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SingleArgumentDig
Style/SingleLineBlockParams:
  Description: |-
    Checks whether the block parameters of a single-line
    method accepting a block match the names specified via configuration.
  Enabled: false
  VersionAdded: '0.16'
  VersionChanged: '1.6'
  Methods:
    - reduce:
      - acc
      - elem
    - inject:
      - acc
      - elem
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SingleLineBlockParams
Style/SingleLineMethods:
  Description: |-
    Checks for single-line method definitions that contain a body.
    It will accept single-line methods with no body.
  StyleGuide: "#no-single-line-methods"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '1.8'
  AllowIfMethodIsEmpty: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SingleLineMethods
Style/SlicingWithRange:
  Description: |-
    Checks that arrays are sliced with endless ranges instead of
    `ary[start..-1]` on Ruby 2.6+.
  Enabled: true
  VersionAdded: '0.83'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SlicingWithRange
Style/SoleNestedConditional:
  Description: |-
    If the branch of a conditional consists solely of a conditional node,
    its conditions can be combined with the conditions of the outer branch.
    This helps to keep the nesting level from getting too deep.
  Enabled: true
  VersionAdded: '0.89'
  VersionChanged: '1.5'
  AllowModifier: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SoleNestedConditional
Style/SpecialGlobalVars:
  Description: |-
    This cop looks for uses of Perl-style global variables.
    Correcting to global variables in the 'English' library
    will add a require statement to the top of the file if
    enabled by RequireEnglish config.
  StyleGuide: "#no-cryptic-perlisms"
  Enabled: true
  VersionAdded: '0.13'
  VersionChanged: '0.36'
  SafeAutoCorrect: false
  RequireEnglish: true
  EnforcedStyle: use_english_names
  SupportedStyles:
    - use_perl_names
    - use_english_names
    - use_builtin_english_names
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SpecialGlobalVars
Style/StabbyLambdaParentheses:
  Description: |-
    Check for parentheses around stabby lambda arguments.
    There are two different styles. Defaults to `require_parentheses`.
  StyleGuide: "#stabby-lambda-with-args"
  Enabled: true
  VersionAdded: '0.35'
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StabbyLambdaParentheses
Style/StaticClass:
  Description: |-
    Checks for places where classes with only class methods can be
    replaced with a module. Classes should be used only when it makes sense to create
    instances out of them.
  StyleGuide: "#modules-vs-classes"
  Enabled: false
  Safe: false
  VersionAdded: '1.3'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StaticClass
Style/StderrPuts:
  Description: |-
    Identifies places where `$stderr.puts` can be replaced by
    `warn`. The latter has the advantage of easily being disabled by,
    the `-W0` interpreter flag or setting `$VERBOSE` to `nil`.
  StyleGuide: "#warn"
  Enabled: true
  VersionAdded: '0.51'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StderrPuts
Style/StringChars:
  Description: Checks for uses of `String#split` with empty string or regexp literal
    argument.
  StyleGuide: "#string-chars"
  Enabled: pending
  Safe: false
  VersionAdded: '1.12'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringChars
Style/StringConcatenation:
  Description: |-
    Checks for places where string concatenation
    can be replaced with string interpolation.
  StyleGuide: "#string-interpolation"
  Enabled: true
  Safe: false
  VersionAdded: '0.89'
  VersionChanged: '1.18'
  Mode: aggressive
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringConcatenation
Style/StringHashKeys:
  Description: |-
    Checks for the use of strings as keys in hashes. The use of
    symbols is preferred instead.
  StyleGuide: "#symbols-as-keys"
  Enabled: false
  VersionAdded: '0.52'
  VersionChanged: '0.75'
  Safe: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringHashKeys
Style/StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  StyleGuide: "#consistent-string-literals"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.36'
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes
  ConsistentQuotesInMultiline: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringLiterals
Style/StringLiteralsInInterpolation:
  Description: |-
    Checks that quotes inside the string interpolation
    match the configured preference.
  Enabled: true
  VersionAdded: '0.27'
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringLiteralsInInterpolation
Style/StringMethods:
  Description: |-
    Enforces the use of consistent method names
    from the String class.
  Enabled: false
  VersionAdded: '0.34'
  VersionChanged: '0.34'
  PreferredMethods:
    intern: to_sym
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StringMethods
Style/Strip:
  Description: |-
    Identifies places where `lstrip.rstrip` can be replaced by
    `strip`.
  Enabled: true
  VersionAdded: '0.36'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Strip
Style/StructInheritance:
  Description: Checks for inheritance from Struct.new.
  StyleGuide: "#no-extend-struct-new"
  Enabled: true
  SafeAutoCorrect: false
  VersionAdded: '0.29'
  VersionChanged: '1.20'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/StructInheritance
Style/SwapValues:
  Description: Enforces the use of shorthand-style swapping of 2 variables.
  StyleGuide: "#values-swapping"
  Enabled: pending
  VersionAdded: '1.1'
  SafeAutoCorrect: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SwapValues
Style/SymbolArray:
  Description: |-
    Checks for array literals made up of symbols that are not
    using the %i() syntax.
  StyleGuide: "#percent-i"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.49'
  EnforcedStyle: percent
  MinSize: 2
  SupportedStyles:
    - percent
    - brackets
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolArray
Style/SymbolLiteral:
  Description: Checks symbol literal syntax.
  Enabled: true
  VersionAdded: '0.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolLiteral
Style/SymbolProc:
  Description: Use symbols as procs when possible.
  Enabled: true
  Safe: false
  VersionAdded: '0.26'
  VersionChanged: '1.28'
  AllowMethodsWithArguments: false
  IgnoredMethods:
    - respond_to
    - define_method
  AllowComments: false
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolProc
Style/TernaryParentheses:
  Description: |-
    Checks for the presence of parentheses around ternary
    conditions. It is configurable to enforce inclusion or omission of
    parentheses using `EnforcedStyle`. Omission is only enforced when
    removing the parentheses won't cause a different behavior.
  Enabled: true
  VersionAdded: '0.42'
  VersionChanged: '0.46'
  EnforcedStyle: require_no_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses
    - require_parentheses_when_complex
  AllowSafeAssignment: true
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TernaryParentheses
Style/TopLevelMethodDefinition:
  Description: |-
    Newcomers to ruby applications may write top-level methods,
    when ideally they should be organized in appropriate classes or modules.
    This cop looks for definitions of top-level methods and warns about them.
  StyleGuide: "#top-level-methods"
  Enabled: false
  VersionAdded: '1.15'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TopLevelMethodDefinition
Style/TrailingBodyOnClass:
  Description: Checks for trailing code after the class definition.
  Enabled: true
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingBodyOnClass
Style/TrailingBodyOnMethodDefinition:
  Description: Checks for trailing code after the method definition.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingBodyOnMethodDefinition
Style/TrailingBodyOnModule:
  Description: Checks for trailing code after the module definition.
  Enabled: true
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingBodyOnModule
Style/TrailingCommaInArguments:
  Description: |-
    Checks for trailing comma in argument lists.
    The supported styles are:
  StyleGuide: "#no-trailing-params-comma"
  Enabled: true
  VersionAdded: '0.36'
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingCommaInArguments
Style/TrailingCommaInArrayLiteral:
  Description: |-
    Checks for trailing comma in array literals.
    The configuration options are:
  StyleGuide: "#no-trailing-array-commas"
  Enabled: true
  VersionAdded: '0.53'
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingCommaInArrayLiteral
Style/TrailingCommaInBlockArgs:
  Description: |-
    Checks whether trailing commas in block arguments are
    required. Blocks with only one argument and a trailing comma require
    that comma to be present. Blocks with more than one argument never
    require a trailing comma.
  Enabled: false
  Safe: false
  VersionAdded: '0.81'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingCommaInBlockArgs
Style/TrailingCommaInHashLiteral:
  Description: |-
    Checks for trailing comma in hash literals.
    The configuration options are:
  Enabled: true
  EnforcedStyleForMultiline: no_comma
  SupportedStylesForMultiline:
    - comma
    - consistent_comma
    - no_comma
  VersionAdded: '0.53'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingCommaInHashLiteral
Style/TrailingMethodEndStatement:
  Description: Checks for trailing code after the method definition.
  Enabled: true
  VersionAdded: '0.52'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingMethodEndStatement
Style/TrailingUnderscoreVariable:
  Description: Checks for extra underscores in variable assignment.
  AllowNamedUnderscoreVariables: true
  Enabled: true
  VersionAdded: '0.31'
  VersionChanged: '0.35'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrailingUnderscoreVariable
Style/TrivialAccessors:
  Description: |-
    Looks for trivial reader/writer methods, that could
    have been created with the attr_* family of functions automatically.
  StyleGuide: "#attr_family"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '1.15'
  ExactNameMatch: true
  AllowPredicates: true
  AllowDSLWriters: true
  IgnoreClassMethods: false
  AllowedMethods:
    - to_ary
    - to_a
    - to_c
    - to_enum
    - to_h
    - to_hash
    - to_i
    - to_int
    - to_io
    - to_open
    - to_path
    - to_proc
    - to_r
    - to_regexp
    - to_str
    - to_s
    - to_sym
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/TrivialAccessors
Style/UnlessElse:
  Description: Looks for `unless` expressions with `else` clauses.
  StyleGuide: "#no-else-with-unless"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/UnlessElse
Style/UnlessLogicalOperators:
  Description: |-
    Checks for the use of logical operators in an `unless` condition.
    It discourages such code, as the condition becomes more difficult
    to read and understand.
  Enabled: false
  VersionAdded: '1.11'
  EnforcedStyle: forbid_mixed_logical_operators
  SupportedStyles:
    - forbid_mixed_logical_operators
    - forbid_logical_operators
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/UnlessLogicalOperators
Style/UnpackFirst:
  Description: |-
    Checks for accessing the first element of `String#unpack`
    which can be replaced with the shorter method `unpack1`.
  Enabled: true
  VersionAdded: '0.54'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/UnpackFirst
Style/VariableInterpolation:
  Description: Checks for variable interpolation (like "#@ivar").
  StyleGuide: "#curlies-interpolate"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.20'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/VariableInterpolation
Style/WhenThen:
  Description: Checks for `when;` uses in `case` expressions.
  StyleGuide: "#no-when-semicolons"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/WhenThen
Style/WhileUntilDo:
  Description: Checks for uses of `do` in multi-line `while/until` statements.
  StyleGuide: "#no-multiline-while-do"
  Enabled: true
  VersionAdded: '0.9'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/WhileUntilDo
Style/WhileUntilModifier:
  Description: |-
    Checks for while and until statements that would fit on one line
    if written as a modifier while/until. The maximum line length is
    configured in the `Layout/LineLength` cop.
  StyleGuide: "#while-as-a-modifier"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/WhileUntilModifier
Style/WordArray:
  Description: |-
    Checks for array literals made up of word-like
    strings, that are not using the %w() syntax.
  StyleGuide: "#percent-w"
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '1.19'
  EnforcedStyle: percent
  SupportedStyles:
    - percent
    - brackets
  MinSize: 2
  WordRegex: !ruby/regexp /\A(?:\p{Word}|\p{Word}-\p{Word}|\n|\t)+\z/
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/WordArray
Style/YodaCondition:
  Description: |-
    Enforces or forbids Yoda conditions,
    i.e. comparison operations where the order of expression is reversed.
    eg. `5 == x`
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/YodaCondition
  Enabled: true
  EnforcedStyle: forbid_for_all_comparison_operators
  SupportedStyles:
    - forbid_for_all_comparison_operators
    - forbid_for_equality_operators_only
    - require_for_all_comparison_operators
    - require_for_equality_operators_only
  Safe: false
  VersionAdded: '0.49'
  VersionChanged: '0.75'
Style/ZeroLengthPredicate:
  Description: |-
    Checks for numeric comparisons that can be replaced
    by a predicate method, such as receiver.length == 0,
    receiver.length > 0, receiver.length != 0,
    receiver.length < 1 and receiver.size == 0 that can be
    replaced by receiver.empty? and !receiver.empty?.
  Enabled: true
  Safe: false
  VersionAdded: '0.37'
  VersionChanged: '0.39'
  Reference: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/ZeroLengthPredicate
